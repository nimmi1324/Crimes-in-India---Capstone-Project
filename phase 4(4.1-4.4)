{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e0c49650",
   "metadata": {},
   "outputs": [],
   "source": [
    "#4.1  \"Create 3 clusters as below.\n",
    "#1. Sensitive Area's\n",
    "#2. Moderate Area's\n",
    "#3. Peaceful Area's\"\n",
    "#4.2  Create DataFrame for each cluster that shows data according to the areas.\n",
    "#4.3  \"Analyse your clusters and prepare a report that explains all your observations.\n",
    "#Example - \n",
    "#1. What is impacting more crimes in sensitive areas. \n",
    "#2. What needs to be done to reduce crime. \n",
    "#3. Most safe and unsafe districts.\n",
    "#4. Etc.......Anything that you observe (If you want, you can plot various graphs to analyze)\"\n",
    "#4.4   Capstone project overall story in your own words. Min 1000 words."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56102f67",
   "metadata": {},
   "source": [
    "# Statewise crime data analysis for the year 2020 based on the data extracted from National crime bureau website"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "54ac93bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn import preprocessing\n",
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "64d26350",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.no</th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Alluri Sitharama Raju</td>\n",
       "      <td>29</td>\n",
       "      <td>5</td>\n",
       "      <td>34</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anakapalli</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anantapuramu</td>\n",
       "      <td>51</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Annamayya</td>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Bapatla</td>\n",
       "      <td>42</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929</th>\n",
       "      <td>930</td>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Kargil</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>931</td>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Leh</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>932</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>933</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Karaikal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>934</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>30</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>505</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>934 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     S.no         State/UT               District  Murder  \\\n",
       "0       1   Andhra Pradesh  Alluri Sitharama Raju      29   \n",
       "1       2   Andhra Pradesh             Anakapalli      16   \n",
       "2       3   Andhra Pradesh           Anantapuramu      51   \n",
       "3       4   Andhra Pradesh              Annamayya      37   \n",
       "4       5   Andhra Pradesh                Bapatla      42   \n",
       "..    ...              ...                    ...     ...   \n",
       "929   930           Ladakh                 Kargil       2   \n",
       "930   931           Ladakh                    Leh       3   \n",
       "931   932      Lakshadweep            Lakshadweep       0   \n",
       "932   933       Puducherry               Karaikal       0   \n",
       "933   934       Puducherry             Puducherry      30   \n",
       "\n",
       "     Kidnapping and Abduction  Rape  Theft  \n",
       "0                           5    34     46  \n",
       "1                          26    37    264  \n",
       "2                          31    12    405  \n",
       "3                          10    11    275  \n",
       "4                          15    22    391  \n",
       "..                        ...   ...    ...  \n",
       "929                         6     2     13  \n",
       "930                         2     3      7  \n",
       "931                         0     4     14  \n",
       "932                         0     0      0  \n",
       "933                        24     9    505  \n",
       "\n",
       "[934 rows x 7 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=pd.read_excel(r'C:/Users/HP/Desktop/Learning-2023/3.4DistrictwiseIPCCrimes.xlsx')\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8b63238b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.no</th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Alluri Sitharama Raju</td>\n",
       "      <td>29</td>\n",
       "      <td>5</td>\n",
       "      <td>34</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anakapalli</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anantapuramu</td>\n",
       "      <td>51</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Annamayya</td>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Bapatla</td>\n",
       "      <td>42</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>391</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   S.no         State/UT               District  Murder  \\\n",
       "0     1   Andhra Pradesh  Alluri Sitharama Raju      29   \n",
       "1     2   Andhra Pradesh             Anakapalli      16   \n",
       "2     3   Andhra Pradesh           Anantapuramu      51   \n",
       "3     4   Andhra Pradesh              Annamayya      37   \n",
       "4     5   Andhra Pradesh                Bapatla      42   \n",
       "\n",
       "   Kidnapping and Abduction  Rape  Theft  \n",
       "0                         5    34     46  \n",
       "1                        26    37    264  \n",
       "2                        31    12    405  \n",
       "3                        10    11    275  \n",
       "4                        15    22    391  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3b7b89bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.no</th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>929</th>\n",
       "      <td>930</td>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Kargil</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>931</td>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Leh</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>932</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>933</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Karaikal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>934</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>30</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>505</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     S.no     State/UT     District  Murder  Kidnapping and Abduction  Rape  \\\n",
       "929   930       Ladakh       Kargil       2                         6     2   \n",
       "930   931       Ladakh          Leh       3                         2     3   \n",
       "931   932  Lakshadweep  Lakshadweep       0                         0     4   \n",
       "932   933   Puducherry     Karaikal       0                         0     0   \n",
       "933   934   Puducherry   Puducherry      30                        24     9   \n",
       "\n",
       "     Theft  \n",
       "929     13  \n",
       "930      7  \n",
       "931     14  \n",
       "932      0  \n",
       "933    505  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e47f63c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>S.no</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>467.500000</td>\n",
       "      <td>30.537473</td>\n",
       "      <td>115.190578</td>\n",
       "      <td>33.743041</td>\n",
       "      <td>698.85546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>269.766875</td>\n",
       "      <td>28.753082</td>\n",
       "      <td>158.570659</td>\n",
       "      <td>45.274870</td>\n",
       "      <td>1993.06392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>234.250000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>12.250000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>85.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>467.500000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>237.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>700.750000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>541.75000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>934.000000</td>\n",
       "      <td>307.000000</td>\n",
       "      <td>1754.000000</td>\n",
       "      <td>370.000000</td>\n",
       "      <td>19364.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             S.no      Murder  Kidnapping and Abduction        Rape  \\\n",
       "count  934.000000  934.000000                934.000000  934.000000   \n",
       "mean   467.500000   30.537473                115.190578   33.743041   \n",
       "std    269.766875   28.753082                158.570659   45.274870   \n",
       "min      1.000000    0.000000                  0.000000    0.000000   \n",
       "25%    234.250000    8.000000                 12.250000    6.000000   \n",
       "50%    467.500000   25.000000                 51.000000   18.000000   \n",
       "75%    700.750000   43.000000                156.000000   43.000000   \n",
       "max    934.000000  307.000000               1754.000000  370.000000   \n",
       "\n",
       "             Theft  \n",
       "count    934.00000  \n",
       "mean     698.85546  \n",
       "std     1993.06392  \n",
       "min        0.00000  \n",
       "25%       85.00000  \n",
       "50%      237.50000  \n",
       "75%      541.75000  \n",
       "max    19364.00000  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fed3d429",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop(['S.no'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "92a10315",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(934, 7)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "47ff4dd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Total_crimes']= data['Murder']+data['Kidnapping and Abduction']+data['Rape']+data['Theft']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f974e221",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 934 entries, 0 to 933\n",
      "Data columns (total 7 columns):\n",
      " #   Column                    Non-Null Count  Dtype \n",
      "---  ------                    --------------  ----- \n",
      " 0   State/UT                  934 non-null    object\n",
      " 1   District                  934 non-null    object\n",
      " 2   Murder                    934 non-null    int64 \n",
      " 3   Kidnapping and Abduction  934 non-null    int64 \n",
      " 4   Rape                      934 non-null    int64 \n",
      " 5   Theft                     934 non-null    int64 \n",
      " 6   Total_crimes              934 non-null    int64 \n",
      "dtypes: int64(5), object(2)\n",
      "memory usage: 51.2+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d2a858e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "State/UT                    0\n",
       "District                    0\n",
       "Murder                      0\n",
       "Kidnapping and Abduction    0\n",
       "Rape                        0\n",
       "Theft                       0\n",
       "Total_crimes                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d2385276",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.heatmap(data.corr(), annot=True)\n",
    "plt.title('Corelation between the columns', fontsize=15)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3d5ea0a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Murder', 'Kidnapping and Abduction', 'Rape', 'Theft', 'Total_crimes'], dtype='object')"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "column=data.columns[2:]\n",
    "column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "75169e78",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA2QAAAMcCAYAAAA/mWZkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy88F64QAAAACXBIWXMAAA9hAAAPYQGoP6dpAADocElEQVR4nOzdd3QU5fv38c8mQEhdahKiQQICEgFBVJoFpCodBTUaQRALSJGi+FUQFUFBqliwgXQUKSrSBEEpkRqQLh2U0AwBQmjJ/fzBL/tkSQLZzS5Deb/O2XM2M3curg27s3PN3MVmjDECAAAAAFx1PlYnAAAAAAA3KwoyAAAAALAIBRkAAAAAWISCDAAAAAAsQkEGAAAAABahIAMAAAAAi1CQAQAAAIBFKMgAAAAAwCJ5rE7gRpKWlqZ///1XwcHBstlsVqcDAAAAwCLGGJ08eVIRERHy8cn+PhgFmQf9+++/ioyMtDoNAAAAANeI/fv369Zbb812PwWZBwUHB0u6+EcPCQmxOBsAAAAAVjlx4oQiIyMdNUJ2KMg8KL2bYkhICAUZAAAAgCsOZWJSDwAAAACwCAUZAAAAAFiEggwAAAAALEJBBgAAAAAWoSADAAAAAItQkAEAAACARSjIAAAAAMAiFGQAAAAAYBEKMgAAAACwCAUZAAAAAFiEggwAAAAALEJBBgAAAAAWoSADAAAAAItQkAEAAACARSjIAAAAAMAiFGQAAAAAYBEKMgAAAACwCAUZAAAAAFiEggwAAAAALEJBBgAAAAAWoSADAAAAAIvksToBAAAAAJ7TtWtXHTlyRJJUtGhRjRgxwuKMcDkUZAAAAMAN5MiRIzp06JDVaSCH6LIIAAAAABahIAMAAAAAi1hakP3+++9q0qSJIiIiZLPZNHPmTMe+8+fP6/XXX1eFChUUGBioiIgIPfvss/r333+dYpw9e1adO3dWkSJFFBgYqKZNm+rAgQNObRITExUbGyu73S673a7Y2FgdP37cqc2+ffvUpEkTBQYGqkiRIurSpYvOnTvnrZcOAAAAANYWZMnJybrrrrs0atSoTPtOnz6ttWvXqk+fPlq7dq2mT5+u7du3q2nTpk7tunXrphkzZmjKlClaunSpTp06pcaNGys1NdXRJiYmRvHx8Zo7d67mzp2r+Ph4xcbGOvanpqaqUaNGSk5O1tKlSzVlyhT98MMP6tGjh/dePAAAAICbns0YY6xOQpJsNptmzJih5s2bZ9tm1apVuu+++7R3714VL15cSUlJKlq0qMaPH68nnnhCkvTvv/8qMjJSv/zyixo0aKAtW7YoOjpacXFxqlq1qiQpLi5O1atX19atW1W2bFnNmTNHjRs31v79+xURESFJmjJlitq2bavDhw8rJCQkR6/hxIkTstvtSkpKyvHvAAAAAJ4UExPjmNQjLCxMkyZNsjijm1NOa4PragxZUlKSbDabChQoIElas2aNzp8/r/r16zvaREREqHz58lq+fLkkacWKFbLb7Y5iTJKqVasmu93u1KZ8+fKOYkySGjRooLNnz2rNmjXZ5nP27FmdOHHC6QEAAAAAOXXdFGRnzpxR7969FRMT46gwExISlC9fPhUsWNCpbVhYmBISEhxtQkNDM8ULDQ11ahMWFua0v2DBgsqXL5+jTVYGDhzoGJdmt9sVGRmZq9cIAAAA4OZyXRRk58+f15NPPqm0tDR9+umnV2xvjJHNZnP8nPF5btpc6o033lBSUpLjsX///ivmBgAAAADprvmC7Pz582rdurV2796tBQsWOPW/DA8P17lz55SYmOj0O4cPH3bc8QoPD89yYbwjR444tbn0TlhiYqLOnz+f6c5ZRn5+fgoJCXF6AAAAAEBOXdMFWXox9vfff+vXX39V4cKFnfZXqVJFefPm1YIFCxzbDh48qI0bN6pGjRqSpOrVqyspKUkrV650tPnzzz+VlJTk1Gbjxo06ePCgo838+fPl5+enKlWqePMlAgAAALiJ5bHyHz916pR27Njh+Hn37t2Kj49XoUKFFBERoccff1xr167Vzz//rNTUVMddrEKFCilfvnyy2+1q3769evToocKFC6tQoULq2bOnKlSooLp160qSypUrp4YNG6pDhw4aPXq0JOmFF15Q48aNVbZsWUlS/fr1FR0drdjYWA0ePFj//fefevbsqQ4dOnDXCwAAAIDXWFqQrV69WrVr13b83L17d0lSmzZt1K9fP/3444+SpEqVKjn93m+//aZatWpJkoYNG6Y8efKodevWSklJUZ06dTR27Fj5+vo62k+cOFFdunRxzMbYtGlTp7XPfH19NXv2bHXs2FE1a9aUv7+/YmJi9NFHH3njZQMAAACApGtoHbIbAeuQAQAAwGqsQ3ZtuCHXIQMAAACAGwkFGQAAAABY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AwAAAACLUJABAAAAgEUoyAAAAADAIhRkAAAAAGARCjIAAAAAsAgFGQAAAABYhIIMAAAAACxCQQYAAAAAFqEgAwAAAACLUJABAAAAgEUoyAAAAADAIhRkAAAAAGARCjIAAAAAsAgFGQAAAABYhIIMAAAAACxCQQYAAAAAFqEgAwAAAACLUJABAAAAgEUoyAAAAADAIhRkAAAAAGARCjIAAAAAsAgFGQAAAABYhIIMAAAAACxCQQYAAAAAFqEgAwAAAACLUJABAAAAgEUoyAAAAADAIhRkAAAAAGARCjIAAAAAsAgFGQAAAABYhIIMAAAAACxCQQYAAAAAFqEgAwAAAACLUJABAAAAgEWuq4Js4MCBstls6tatm2ObMUb9+vVTRESE/P39VatWLW3atMnp986ePavOnTurSJEiCgwMVNOmTXXgwAGnNomJiYqNjZXdbpfdbldsbKyOHz9+FV4VAAAAgJvVdVOQrVq1Sl988YUqVqzotH3QoEEaOnSoRo0apVWrVik8PFz16tXTyZMnHW26deumGTNmaMqUKVq6dKlOnTqlxo0bKzU11dEmJiZG8fHxmjt3rubOnav4+HjFxsZetdcHAAAA4OZzXRRkp06d0tNPP60vv/xSBQsWdGw3xmj48OF688031bJlS5UvX17ffvutTp8+rUmTJkmSkpKS9PXXX2vIkCGqW7euKleurAkTJuivv/7Sr7/+KknasmWL5s6dq6+++krVq1dX9erV9eWXX+rnn3/Wtm3bLHnNAAAAAG5810VB1qlTJzVq1Eh169Z12r57924lJCSofv36jm1+fn566KGHtHz5cknSmjVrdP78eac2ERERKl++vKPNihUrZLfbVbVqVUebatWqyW63O9pk5ezZszpx4oTTAwAAAAByKo/VCVzJlClTtHbtWq1atSrTvoSEBElSWFiY0/awsDDt3bvX0SZfvnxOd9bS26T/fkJCgkJDQzPFDw0NdbTJysCBA/XOO++49oIAAAAA4P9c03fI9u/fr65du2rChAnKnz9/tu1sNpvTz8aYTNsudWmbrNpfKc4bb7yhpKQkx2P//v2X/TcBAAAAIKNruiBbs2aNDh8+rCpVqihPnjzKkyePlixZopEjRypPnjyOO2OX3sU6fPiwY194eLjOnTunxMTEy7Y5dOhQpn//yJEjme6+ZeTn56eQkBCnBwAA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761vv/3W8fzYsWPq37+/GjRooOrVq0uSVqxYoXnz5qlPnz569dVXc523NyQnJ2vJkiVZvg+6dOniUqxKlSqpTJkyeuedd7I8Dtjt9lzn60me/rx62z///KNly5ZleSxw5f/K21fyJWnatGnZnpCvXbvWrZjpVq9erS1btshms+mOO+7QPffck6t43rhbvnv3br3yyitavHixzpw549hujHHrhHzWrFlOP58/f17r1q3Tt99+q3feeUft27d3K8+FCxeqadOmioqK0rZt21S+fHnt2bNHxhjdfffdbn3H9O3bV1999ZW6d++uPn366M0339SePXs0c+ZM9e3b1+XjSjpPn2ecOHEix21dLaC9wW63a+3atSpVqpQ+/PBDLVq0SPPmzdOyZcv05JNPav/+/W7H9vTFtBYtWjj9fP78eW3cuFHHjx/Xww8/7PJ51siRI/XCCy8of/78Gjly5GXbuvr++v7779W7d2+9+uqrqlKligIDA532V6xY0aV4l1q4cGG253C5LUwPHz6sbdu2yWazqUyZMpnOv1wxduxYtW7d2qPn2xlRkF0lRYoU0bhx4/Too496LGZgYKD++usvj58sdenSRV988YVq166tsLCwTAf1MWPGuB37ueeeU4UKFdS9e/fcpinJO4Wu5Nkv4RMnTsgYo4IFC+rvv/9W0aJFHftSU1P1008/qXfv3vr333/dyjXdqlWr9P3332d5gufqwd0b763HHntMtWvX1iuvvOK0fdSoUfr11181c+bMXMX35OtPt27dOj366KM6ffq0kpOTVahQIR09elQBAQEKDQ3Vrl27XIoXGBio9evX6/bbb3crnyvx9Em+pz+vGXk61zFjxuill15Svnz5VLhw4Ux3dV35v7r0Sr7NZnM6CcsY250r+SNHjtSbb76pNm3a6Msvv9Rzzz2nnTt3atWqVerUqZPef/99l2NKFy8iPfXUU1q2bJkKFCgg6WIxVaNGDU2ePFmRkZEux/RWT4waNWpIkrp27Zrl98xDDz3kVtxLTZo0SVOnTs1UsOXUfffdp4YNG+rdd99VcHCw1q9fr9DQUD399NNq2LChXn75ZZdjlipVSiNHjlSjRo0UHBys+Ph4x7a4uDhNmjTJrVw9fZ5xpbuOGV0Ld/dDQkK0Zs0alS5dWvXq1VPjxo3VtWtX7du3T2XLllVKSorbsa/GxbS0tDR17NhRJUuW1GuvvebS70ZFRWn16tUqXLiwoqKism3n6rFQyvrOZvoxMbc9O9555x29++67uueee7L8u86YMcOtuCdOnFCnTp00ZcoUR36+vr564okn9Mknn7j1/1WsWDElJyerVatWat++veMY5jEGV0WxYsXMtm3bPBqzRYsWZurUqR6NaYwxBQsWNLNnz/Z4XGOM6d+/vylQoIB57LHHzIABA8yIESOcHq4qXLiwV3K99957TZ8+fYwxxgQFBZmdO3eakydPmqZNm5pPP/3UpVg2m834+Phk+/D19TX9+/fPVb6TJ082efPmNY0aNTL58uUzjRs3NmXLljV2u920bdvW5XjeeG8FBgaav//+O9P27du3m8DAwFzF9vTrT/fQQw+ZDh06mAsXLjjeB/v27TMPPvig+eGHH1yOV7t2bTNnzhy387mcESNGmKCgINOpUyeTL18+8+KLL5q6desau91u/ve//7kV09OfV2/meuutt5r+/fub1NRUt/PKyoIFC8zdd99t5s6da5KSksyJEyfM3LlzzT333GPmz5/vVsyyZcuaSZMmGWP+//HFGGP69OljOnXq5Hau9erVM1WrVjVbt251bNu6daupUaOGqVevnlsxS5cubbp27WqSk5PdzisrgYGBTnl6y44dO0xAQIDbvx8UFGR27NhhjDGmQIECZuPGjcYYY+Lj481tt93mVsyAgACzd+9eY4wx4eHhZs2aNcYYY3bu3GlCQkLcztXT5xmLFy92PMaOHWvCw8NN7969zaxZs8ysWbNM7969TbFixczYsWPdin/q1Ckze/Zs89lnn3nk2FK7dm3z7LPPmnHjxpm8efM6vm8WL17s9v9VuoCAgCy/vzxt69atJjw83Ov/jiv27Nlz2UduhIeHm3Hjxnko0/+vVatWpnTp0pmO22XLljWtWrVyK+aFCxfMrFmzTIsWLUy+fPlM2bJlzQcffGAOHjzokZwpyK6Sjz76yHTs2NGkpaXlKk76gXDWrFnmq6++MsWLFzdvv/22mTZtmtO+WbNmuf1vlChRwmzZsiVXeV4udnaPqKgol+N5o9A1xrNfwosXLza//fabsdlsZvr06U5fcsuXLzf//PNPrvOtUKGCGTVqlCP3nTt3mrS0NNOhQwfTt2/fHMXw9nurePHiZtCgQZm2Dxo0yBQvXtytmOk88fqzYrfbHSeNdrvdbN682RhjTFxcnClbtmyOYqxfv97xmD59uomOjjZjxowxq1evdtq3fv16t/M0xjsn+Z7+vHoz10KFCjk+s5505513mj/++CPT9t9//93ccccdbsX09/d3nMgULVrUxMfHG2MuXpwoVKiQ27nmz5/frF27NtP2NWvWmPz587sVMyAgwPH/40m1atUyCxYs8HjcjE6fPm26du1qypQp43aMsLAws2nTJmOMMdHR0Y7jX3x8vNsXksqUKWPi4uKMMcbcf//9ZuDAgcYYY6ZMmWKKFi3qdq6eOs/IysMPP+z4zGY0ceJE89BDD7kcb+3atSY8PNyEhIQYX19fU7RoUWOz2UxgYKDbx5b169eb8uXLm5CQENOvXz/H9ldeecU89dRTbsVM582LaRnNnj3bFClSxOv/zrXCW8ftgICAbI/bublAk+7QoUNmyJAhpkKFCiZv3rymSZMmZubMmbm6IJjHs/fbkFHLli2dfl60aJHmzJmjO++8U3nz5nXal9MuVc2bN8+07d133820LTe3kfv166d33nlH33zzjfz9/d2KkZ3du3d7NF6PHj00YsQIjRo1KsddK3IiMDBQZ8+elSRFRERo586duvPOOyVdHPPlivSuN7t371ZkZGSOBza7YufOnWrUqJEkyc/PT8nJybLZbHr11Vf18MMP65133rliDG+/t9LHcSxevNgxhiwuLk5z587VV1995XK8jDzx+rOSN29ex/sqLCxM+/btU7ly5WS327Vv374cxahUqVKmLm8ZB3R7quvHvn37HF0o/P39dfLkSUlSbGysqlWrplGjRrkc09Of13TeyLV9+/aOsQ6etHPnziy7t9jtdu3Zs8etmOHh4Tp27Jhuu+023XbbbYqLi9Ndd92l3bt3Zxqf4orixYvr/PnzmbZfuHBBt9xyi1sxGzRooNWrV3u8a/xXX32ll156Sf/884/Kly+f6TvR1XEpl04gZIzRyZMnFRAQoAkTJridZ7Vq1bRs2TJFR0erUaNG6tGjh/766y9Nnz5d1apVcytmixYttHDhQlWtWlVdu3bVU089pa+//lr79u1zeSytN84zsrJixQp9/vnnmbbfc889ev75512O9+qrr6pJkyb67LPPVKBAAcXFxSlv3rx65pln1LVrV7dyrFixov76669M2wcPHixfX1+X423YsMHxvHPnzurRo4cSEhJUoUKFXL9fL+0GbozRwYMHNXv2bLVp08blXDPyxNj6H3/8UY888ojy5s17xTG17o6jlaTnn39ekyZNUp8+fdyOkZXChQtne9wuWLBgruOHhoaqZs2a2rZtm7Zv366//vpLbdu2VYECBTRmzBjVqlXL5ZgUZF506Zvh0kGc7rj0g+UNrVq10uTJkxUaGqoSJUpkOvDkdsB5bl2NLyBvfAmnTxl7+vTpLMfN5GZgbKFChRwntbfccos2btyoChUq6Pjx4zp9+nSOYnj7vdW2bVuVK1dOI0eO1PTp02WMUXR0tJYtW6aqVavmKrYnXn9WKleurNWrV6tMmTKqXbu2+vbtq6NHj2r8+PGOqZWvxFtFzaW8dZLvDd7IdeDAgWrcuLHmzp2b5QmTOxPxSBdnbuvWrZsmTJigYsWKSZISEhLUo0cP3XfffW7FfPjhh/XTTz/p7rvvVvv27fXqq69q2rRpWr16dabjmysGDRqkzp0765NPPlGVKlVks9m0evVqde3aVR999JFbMRs1aqRevXpp8+bNWf5d3T0ZO3LkiHbu3KnnnnvOsS03FyeGDRvmVJD5+PioaNGiqlq1aq5OwIYOHapTp05Junix8tSpU5o6dapuv/12t8cof/DBB47njz/+uCIjI7Vs2TLdfvvtLv89vXGekZXIyEh9/vnnGjJkiNP20aNHuzU2MT4+XqNHj5avr698fX119uxZlSxZUoMGDVKbNm1y9Tm4VP78+d36PW9eTFu3bp3Tz+nv1yFDhlxxBsYr6dq1q2Nsffny5d26WN28eXMlJCQoNDQ0y4u16dx57RmL0bS0NH3xxRf69ddfVbFiRY8dt9966y11795d48aNczpu9+rVK1fF36FDhzR+/HiNGTNGu3btUvPmzfXzzz+rbt26SklJ0VtvvaU2bdpo7969LsdmUo8bzPHjxx2Dud3VunVr/fbbb3r88cezHGz99ttv5yp+bmcvzPgFfiXuTkCya9cunTp1ShUrVtTp06fVs2dPLV261PEl7M56HEeOHNFzzz2nOXPmZLk/N3dHYmJidM8996h79+56//33NWLECDVr1kwLFizQ3Xffnasro+k88d7yFm+9/tWrV+vkyZOqXbu2jhw5ojZt2jjeB2PGjNFdd93l4Vfivueff16RkZF6++239fnnn6t79+6qWbOm4yT/66+/djmmt6Zm9kau7733nt5++22VLVs203HLZrO5PePqjh071KJFC23btk3FixeXdPEOX5kyZTRz5ky3JmhJS0tTWlqa8uS5eE30u+++c7yv0icmyalL7wwlJyfrwoULjtjpzwMDA92agONyd/Rzc1c3Ojpa5cqV02uvvZbl98yNuubR9bqcxC+//KLHHntMpUqVclyUjIuL086dO/XDDz+4PJFI0aJFtWzZMpUpU0Zly5bVyJEj1aBBA23dulV33313ji+keXNpFVdOqq+l96s3JpHzpNq1a+e47W+//ebWv1G5cmXt2LFDZ8+edTpu+/n5qXTp0k5tc3qToUmTJpo3b57KlCmj559/Xs8++6wKFSrk1Obff//Vrbfe6tYFbgqyqyQlJUXGGMd0mXv37tWMGTMUHR2t+vXruxXzww8/VIkSJfTEE09Iunhn64cfflCxYsX0yy+/uH2yGBgYqHnz5un+++936/cvx5OzF164cEETJ05UgwYNFB4e7vFcPe3pp5/Wnj17NHz4cNWuXVszZszQoUOH1L9/fw0ZMsTR5c4d//33n86cOaOIiAilpaXpo48+cpzg9enTx+UrxN56b3lrUWRPv35v+fbbb1WkSBHH//Vrr72mL774QtHR0Zo8eXKuvtQ9eZKfztNTM3sz14IFC2rYsGFq27atWzldjjFGCxYs0NatWx13duvWrevRbtLuyri0xJXktiuUJ3lixtGMXcquJLdTc587dy7L41b6yZ4rvLWchDfOMzI6cOCAPv30U6fPwUsvveTWHbL69eurbdu2iomJ0UsvvaR169apS5cuGj9+vBITE/Xnn3/mKM7VWFrl/PnzKlu2rH7++WdFR0e7FeNqioiI0OLFi1WmTBmrU7GMK8MUcnqToX379nr++ecd762sGGO0b98+977L3R59BpfUq1fPfPbZZ8YYYxITE01oaKi59dZbTf78+V2etS9dVFSUWbZsmTHGmPnz55sCBQqYefPmmfbt27s9o5YxFwfc53aCgex4cvZCY5wHx3vD6tWrzfjx482ECROyHCzvivDwcPPnn38aY4wJDg52TEYya9YsU7NmzVzn6kneeG+tWLHCREVFGR8fH2Oz2ZwePj4+uco3MTEx231XY2asnCpTpoxZuHChMcaY5cuXG39/fzN69GjTpEkT06JFC7fjnj9/3vTr18/s27fPU6lmKzU11bz44ovmww8/9Pq/5YqwsDCzfft2q9PIscTERDNv3jwzfvx48+233zo9bgaNGzc206ZNy1WM9GNHxuNIdg93bdu2zdx///2Z4uXmuNW2bVszZMgQt3PKjjfOM7xl1apVZtGiRcYYYw4fPmweeeQRExwcbCpXruyY5MZVLVu2NB9//HGm7R9//LFp1qxZbtI1ERERjkmd3FW5cmXz33//GWOMqVSpkqlcuXK2j9zwxuQuf/75p/nwww9Njx49zKuvvur0yI1ff/01231Z/V9a5dy5c6ZWrVpemUQuHXfIrpIiRYpoyZIluvPOO/XVV1/p448/1rp16/TDDz+ob9++2rJli8sx/f39tX37dkVGRqpr1646c+aMRo8ere3bt6tq1apKTEx0K9fZs2fr448/1ueff64SJUq4FSM7GddcKViwoJYuXao777xT69evV7NmzVweJF+7dm117dr1sn2c3XH48GE9+eSTWrx4sQoUKCBjjJKSklS7dm1NmTLFaS2xnAoJCdGGDRtUokQJlShRQhMnTlTNmjW1e/du3Xnnnbka6yR59u6TN95b3lzHpUaNGlq0aFGmsQLbtm1TnTp1dODAgRzHqly5co7vfLg6njIgIEBbt25V8eLF9frrr+vgwYMaN26cNm3apFq1aunIkSMuxcsoKChIGzdu9PhnNivbtm1TrVq1dPDgQbd+v0SJEmrXrp3atm3r1h2GrAwcOFAHDx684qKo7vD0wqXeWtsro5SUlEwTfLi7eK8nF0dP98UXX6h///5q166d22PTMnYpW7dunXr27KlevXo53R0ZMmSIBg0a5PZ3RM2aNZUnTx717t07y+OWO70F3n//fX300UeqU6dOlgvtuvs39cZ5RkbeWCDck4KCghQfH5/pruvff/+typUrO8YCuuODDz7Q1q1b9dVXXznu7LvqnXfeUa9evRQQEHDFOziuDg3Jamx9oUKFPDK2fsCAAXrrrbc83h1cuni3eMGCBbr33nudtg8fPlx9+/Z1aXHySx0/flzTpk3Tzp071atXLxUqVEhr165VWFiYW5McFS1aVMuXL8/U5dFTmNTjKjl9+rSCg4MlSfPnz1fLli3l4+OjatWquTX4T7rYRWf//v2KjIzU3Llz1b9/f0kXb5nmZjzSM888o9OnT6tUqVIKCAjI9GHOzcmCJ2cvlKSOHTuqR48eOnDggEdXkO/cubNOnDihTZs2qVy5cpKkzZs3q02bNurSpYsmT57scsyyZctq27ZtKlGihCpVqqTRo0erRIkS+vzzzx2DTt0VFxenmJgY7d27N9OkCO6M8/DGe+vvv//WtGnTvLIocsGCBR2Da9O/LLds2aKHH35YrVu3dimWp4v7jIKCgnTs2DEVL15c8+fPd3ShyZ8/f64WLZWkunXravHixV7psnepnTt36sKFC27/fo8ePTR27Fi9++67ql27ttq3b68WLVrIz8/P7ZgrV67UokWL9PPPP3t0gp8rLVzqjh49eqhdu3YaMGCAo3uZJyQnJ+v111/Xd999p2PHjmXa785n90qLo7tbPLz00kuScjeTa8ZuQa1atdLIkSOdxs1UrFhRkZGR6tOnj9uf6/j4eK1Zs0Z33HGHW7+fla+++koFChTQmjVrtGbNGqd9NpvN7b+pN84z0l3pIsK1UJAVLlxYM2bMUK9evZy2z5w5U4ULF85V7D///FMLFy7U/PnzVaFChUznGjk5vmQssnI7Fv9S3pzcZcSIEfrmm2+88t0ybNgwPfroo1qyZImjO+hHH32k9957T7Nnz3Y77oYNG1S3bl3HbLgdOnRQoUKFNGPGDO3du1fjxo1zOeazzz6rr7/+2mlSHk+iILtKbr/9ds2cOVMtWrTQvHnzHCdihw8fdvuqZcuWLRUTE6PSpUvr2LFjeuSRRyQpyytErhg+fLjbv3slnp69MH2MU8YvME9MIz537lz9+uuvjmJMujgI/ZNPPnG7L363bt0cdxTefvttNWjQQBMnTlS+fPk0duxYt2Kme+mll3TPPfdo9uzZHjlp9MZ7q2rVqtqxY4dXCrIffvhB9erVU0xMjKZOnapNmzapTp06evrpp12epcnTX5QZ1atXT88//7wqV66s7du3O8aSbdq0Kdd3th555BG98cYb2rhxY5YXJ9yZDc9bUzN37txZnTt31vr16/XNN9+oS5cu6tixo2JiYtSuXTvdfffdLscsUKCAR2dmS/f5559r7Nixio2N9VjMf/75R126dPFoMSZdHJP422+/6dNPP9Wzzz6rTz75RP/8849Gjx7t9kmEN6Ynlzw/q+tff/2lqKioTNujoqK0efNmt+NGR0e7dbHwcrw186o3zjPSefoiQnY9EWw2m/Lnz6/bb79dbdu2dWkCCG8urVKgQAE99thjuYqRkTFGa9as0Z49e2Sz2RQVFeVS74xLuTuBWU74+PioZs2aXon93HPP6dixY6pfv76WLl2qqVOnasCAAZozZ45jaRR3dO/eXW3bttWgQYMcFymki9+TMTExbsU8d+6cvvrqKy1YsED33HNPpu9Yd2eEdPBaZ0g4+f77703evHmNj4+PqVu3rmP7gAEDTMOGDd2Kee7cOTN48GDTpUsXp/FNw4YNM19++WWuc/aGnTt3OsanJScnm5dfftlUqFDBtGjRwq2xYN5aQT4oKMisW7cu0/a1a9ea4OBgt+NmlJycbNasWWOOHDmS61gBAQEeHSvljfeWNxdFNsaY48ePm0qVKpnHHnvMhIaGmp49e+Y6pqclJiaaTp06maZNmzotMtq3b1/Tv3//XMW+dFyeJ8bo1apVy+nx8MMPmyeeeMKMHj3anD9/Plf5ZnTu3DkzfPhw4+fnZ3x8fEzFihXN119/7ZUFbl3ljYVLW7RoYaZOnerRmMYYExkZaX777TdjzMVxqunHhHHjxplHHnnErZieWBz9aqhcubKJiYkxKSkpjm1nzpwxMTExuRqTs3DhQlO9enXz22+/maNHj5qkpCSnx7XEG+cZ6Ty9QHjv3r2N3W43999/v+nevbt59dVXzQMPPGDsdrvp2rWrqVevnvHx8TEzZ850KW5cXJzj/7xSpUomJibGsQj3tWLRokWZxlP7+PiYUqVKmSVLllidXiYffvih6dq1q1f/jd69e5vChQubAgUKeOT/KyQkxHHcTp+vwJiL54x+fn5uxbz0+zDjo3bt2rnOmTFkV1FCQoIOHjyou+66yzGV8MqVKxUSEuLR7hCe5MlxCNeTZs2a6fjx45o8ebIiIiIkXbyq/fTTT6tgwYKaMWOGS/G8PUvTww8/rNdee00NGzb0eGxPyWr67Nzczcyqb3lCQoLq1q2rxo0bO90RcPc9m5qaqmHDhum7777LcvyMJ8b63MzOnz+vGTNmaMyYMVqwYIGqVaum9u3b699//9WoUaNUu3ZtTZo0ydIcX3/9dQUFBeV64dKMi6seOXJE7777rp577jmPru0VFBSkTZs26bbbbtOtt96q6dOn67777tPu3btVoUIFt8bQeGp6ckkaOXKkXnjhBeXPn/+KY/1c7ba3cuVKNWnSRGlpaY5xXevXr5fNZtPPP//s9ppx6cetS+9cuHvckry3nITkvfOMli1b6sknn3S5C3h2OnTooOLFi2f6XPXv31979+7Vl19+qbfffluzZ8/W6tWrPfJvXgt27Nihu+66y7Eo+B133CFjjDZv3qyRI0dq9erV2rBhg8szcHpz7HNaWpoaNWqk7du3Kzo6OtfdwbP77H/00Ud68MEHnT6r7nbfDQsL09y5c1W5cmUFBwdr/fr1KlmypObPn6/27dtr//79LsVLTU3V0qVLVaFChUxT3XsKBdlVtmPHDu3cuVMPPvig/P39HQd1d40fP16jR4/Wrl27tGLFCt12220aPny4oqKi1KxZM7diemMcwqU8OYWwdHF8V1YnzO6e2Ozfv1/NmjXTxo0bFRkZKZvNpr1796pixYqaNWuWbr31Vpdj3nLLLZm6QXrKjBkz9NZbb6lXr15ZnuC5M5bO0++tK41hcHWaWB8fnyw/O+mHNE90Xe3bt6+++uorde/eXX369NGbb76pPXv2aObMmerbt69bXxZ//PGH4+/6/fff65ZbbtH48eMVFRWVq6Umxo0bpyeeeCLTOKxz585pypQpuRrjcfjwYW3btk02m01lypRRaGio27GkiycEY8aM0eTJk+Xr66vY2Fg9//zzTieMq1at0oMPPujS2Lpp06ZlWzy7u6B9165dNW7cOFWsWDFXC5debj2vjHLzfq1YsaI+/vhjPfTQQ6pfv74qVqyojz76SCNHjtSgQYNcmtwmnaemJ5cudh9cvXq1ChcunGX3wnQ2m027du1yOdfTp09rwoQJTtOyx8TEZOpa5IolS5Zcdv9DDz3kckxvLSeRztPnGZL09ddfe/Qigt1u15o1azJ1Yd+xY4eqVKmipKQkbd26Vffee69OnjyZ47jeWlpF8szx5ZVXXtGWLVu0cOHCTPuMMapbt66io6P18ccfu5SbN6Z5T9epUyd9/fXXql27dpZrBrraXfJyn/2M3D0OSNILL7ygI0eO6LvvvlOhQoW0YcMG+fr6qnnz5nrwwQfdGpqTP39+bdmyJcf5uyzX99iQI0ePHjUPP/yw49Z0+u3Tdu3ame7du7sV89NPPzVFihQx/fv3N/7+/o6YY8aMMbVq1XI7144dO5py5cqZ77//3vj7+5tvvvnGvPfee+bWW281EyZMcDuuMZ6fQnjnzp2mYsWK2U5/nFsLFiwwI0eONCNGjDALFizIVayBAweaNm3aeLSrV7rsuqm5+3f11nvLkxYvXpzjh7tKlixpfv75Z2PMxW4P6V0gRowYYZ566imX402bNs34+/ub559/3vj5+Tn+rp988onbXcrS+fj4mEOHDmXafvToUbc/C8ePHzfPPPOM8fX1dbyv8uTJY55++mlz/PjxXOXaoEED891335lz585l2ebUqVOmbdu2OY45YsQIExQUZDp16mTy5ctnXnzxRVO3bl1jt9vN//73P7dz9XY3FU8aOnSoGTFihDHmYrcof39/ky9fPuPj42OGDx/uVkxvTE+OzDyxnIQ3zjPSebpLdGhoaJZLPHz77bcmNDTUGGPMpk2bTOHChXMc05tLq3jq+HLnnXeaH3/8Mdv9P/74o7nzzjtzlaunBQUFOb4HrxdJSUmmZs2apkCBAsbX19dERkaavHnzmgcffNCcOnXKrZj33HPPZafpzy0KsqskNjbWNGjQwOzfv9+pP+u8efNMdHS0WzHLlStnZsyYYYxx7iP7119/uXQQu5Q3xiGkq1GjhnnwwQfNL7/8YtatW2fi4+OdHq5q3LixadasmTl8+LAJCgoymzdvNn/88Ye57777zO+//+5yvNOnT5uffvrJ8XPv3r2d1tvo1auX0xgFVzRv3twEBwebYsWKmfr165sWLVo4PXLD02PpvPXeMubil+ycOXPMrFmznB7XooCAALN3715jzMV15NasWWOMuXghICQkxOV4lSpVcpyEZPy7rlu3zoSFheUqV5vNZg4fPpxpe3x8vClYsKBbMVu1amVKly5t5s6da5KSksyJEyfM3LlzTdmyZU2rVq3cztUbaweWLVvWTJo0yRjj/Lft06eP6dSpk8f/PU+73Fp67tq7d6/54YcfrsnC6XLjRtOPPe7w1vElOTnZbNmyxeNjXzPaunWrCQ8Pd/v3vXGe4S3vvfee8ff3N126dHGs9dmlSxcTEBDgGE87dOhQp7FwV3LXXXeZVq1amc2bN5vExERz/Phxp0dueOr4EhwcbHbv3p3t/l27dpmgoKBc5WrMxePJl19+aXr37m2OHTtmjDFmzZo15sCBAy7HKl68uNmyZUuuc7LCwoULzeDBg82HH36Y64vq8+bNM5UqVTI//fST+ffffz0+npSC7CoJCwtzfClm/DDv2rXLBAYGuhUzf/78jhObjDG3b99u8ufP73augYGBjri33HKLYzHj3OSaLiAgwKMf7MKFCzu+FENCQhyDzxcuXGgqVarkcrzPP//cNG7c2PFzUFCQqVq1quOKeHh4uBk6dKhbubZt2/ayj2uJN95b3r6baYznT5rKlCnjGGB8//33m4EDBxpjjJkyZYopWrSoy/H8/f0dX8YZ/647d+50e6Bx+gKjPj4+pkKFCk6Li1asWNEEBwe7XTwFBASYP/74I9P233//3QQEBLgV01syLhJftGhRx/F2+/btplChQlamlskHH3xgpkyZ4vj58ccfNzabzURERFyTxZM3hIeHZzlJxLRp09x6b3nr+HL48GHTqFEjjy84nZXZs2ebIkWKuP373jjP8KYJEyaYatWqmYIFC5qCBQuaatWqmYkTJzr2nz592qULoJ6e3CojTx1fbDZblj0Z0iUkJOT6fbV+/XpTtGhRc/vtt5s8efI43gdvvfWWiY2NdTneN998Y1q3bm2Sk5NzlVd29u/fbz755BPz+uuve3TR6XQpKSkemSDq0juunlgkPiOmvb9KkpOTs5wq9ujRo26vvRMVFaX4+PhMY2/mzJmTq4kjSpYsqT179ui2225TdHS0vvvuO91333366aefVKBAAbfjSp6fQjg1NVVBQUGSLi6K+e+//6ps2bK67bbbtG3bNpfjTZw40TFVcLpJkyY5BthOmDBBn3zySaY2OeHNaWnTeWosnTfeW127dlVUVJR+/fVXlSxZUitXrtSxY8fUo0cPffTRR27FTHfkyBE999xzmjNnTpb73R2T06JFCy1cuNAxAPupp57S119/rX379rn1HihWrJh27NiRaYr7pUuXujyIO136+krx8fFq0KCB4/MgSfny5VOJEiXcnq65cOHCWS7YbbfbVbBgQbdiSt6ZLCU8PFzHjh3Tbbfdpttuu01xcXG66667tHv37kxr87lq1apV+v7777PM1Z3xPqNHj9aECRMkSQsWLNCvv/6quXPn6rvvvlOvXr00f/78HMdyZaKMoKAg3XnnnapatWqO4x86dEg9e/Z0LIx96d/S3c/Wyy+/rDp16mj58uWOdRinTp2qdu3aubUMiLeOL926dVNiYqLi4uJUu3ZtzZgxQ4cOHVL//v01ZMgQt2J6azkJb5xnXBrfkwuEP/3003r66aez3e/v7+9SPG8ureLJ48vmzZuVkJCQ5T5PnB95esr3kSNHaufOnQoLC1OJEiUyjR90d3yuJC1cuFBN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Wrt2rSPvkydPasCAAfrll1/czlcSXRaR2aUDzlu1amV8fHxuigHn6V1osur6dfr0aRMdHW26dOniVmxvzgLnzbtPnuLpu5kZ3XPPPWbu3LnGGGOaNWtmYmNjzYEDB8xrr71mSpYs6Xbctm3bmiFDhuQqt6vF0zOYepOnJ0sx5uJkRJebvcxdt956q9mwYYMxxpiKFSs6PsPLly93u/vyuXPnzODBg02XLl0cV7KNMWbYsGHmyy+/zFW+v/76q3njjTdM+/btzXPPPef0cMe8efNM/fr1PfK3vdzU6bmdotxbx5cJEyaYMWPGGGMudtsrWrSo8fHxMfnz53f6nnSFt5aT8KYiRYo4eh6UKVPGcbzdsmWLW98xnp7gy9su7f6Y/tiwYYPZvn27OXPmjNUpOnh6yndPL1eUUbNmzcwXX3xhjDGmV69e5vbbbzf9+/c3d999t6lTp47bcatUqWLGjx9vjHE+3+rXr5+5//773YrpzVmSjeEOmVdt2LAhx21zunCvN1djT3fpgPMFCxZozpw5bg04ly7+HcqXLy8fH58r/k1cXcC4RYsWWf49bDab8ufPr9tvv10xMTHZ3vG61P/+9z999913Klu2rF555RWVKVNGNptNW7du1ahRo3ThwgX973//cynHdPv27VONGjUkXRysnL7YZWxsrKpVq6ZRo0a5FVfyzNVhb7+3PH03M6Nu3brp4MGDki4uetmgQQNNnDhR+fLlc2uCgHS333673nvvPS1fvlxVqlTJtMBsTgayu3LlODcLwsbHx2vNmjVOiytfqzw9WYok1a1bV4sXL1bbtm09musDDzygBQsWqEKFCmrdurW6du2qRYsWacGCBapTp45bMfPmzauePXtm2t6tW7dc5frOO+/o3Xff1T333JOruw6XfiaTk5NVqlQpBQQEZBrQ78oELJdeWfckbx1fMk46UblyZe3Zs0dbt25V8eLFVaRIEbdidujQQfHx8Zo9e7aqV68um82m5cuXq2vXrurQoYPjzkZOeOM8IyuVK1fW6tWrVaZMGdWuXVt9+/bV0aNHNX78eMfdbld4eoKvjDw1uVVGlSpVuuz7KG/evHriiSc0evRo5c+f3+1/xxNCQkK0dOlS/fbbb1qzZo3S0tJ09913q27dum7Fe+655zx+NzPd0KFDderUKUlSv379dOrUKU2dOlW33367hg0b5nbct99+W7Gxsfrnn3+Ulpam6dOna9u2bRo3bpx+/vlnt2Ju27Yty8XFQ0JCdPz4cbdzTWczxkN9EZCJj4+PbDabo8tQuvQ/ecZtOe1OlLF7zJkzZ/Tpp58qOjpa1atXlyTFxcVp06ZN6tixowYOHOhW3v7+/tq+fbsiIyPVtWtXnTlzRqNHj9b27dtVtWpVJSYmuhTPx8dHCQkJCg0NdfqbXMqdblVt27bVzJkzVaBAAVWpUkXGGK1bt07Hjx9X/fr1tX79eu3Zs0cLFy5UzZo1cxRz9+7devnll7VgwQKn/6t69erp008/dbv7S8mSJTVt2jTdfffduvfee/X888/rxRdf1Pz58/Xkk0+6NbNcunnz5jm6p+zatUuNGzfW1q1bVbhwYU2dOlUPP/zwFWNcjffW1XL69OlcnzRJF2ebzI7NZtOuXbuuGOO5555zPDfGaMaMGbLb7brnnnskSWvWrNHx48fVsmXLXM3Eee+992rYsGG6//773Y4hXezyuX37dhUpUuSKJ7O5ec9mFBcXp+XLl+v22293+6Rp9OjR6tevn55++uksi2d34/733386c+aMIiIilJaWpo8++khLly7V7bffrj59+uR4tskff/xRjzzyiPLmzZtl1z1P5FqsWDENGjRIsbGxbv1+um+//TbHbd2dFXD//v2O7qWXiouLU7Vq1dyKez0IDAzUvHnzMn1W//jjDzVs2FDJyck5juWN84ysrF69WidPnlTt2rV15MgRtWnTxvE5GDNmjO666y6X4i1atEhvvfWWBgwYoAoVKmQq9ENCQlzOcdeuXWrRooX++usvp/OM9L9Bbl7/rFmz9Prrr6tXr1667777ZIzRqlWrNGTIEL399tu6cOGCevfurSeeeCLXswbnRlpamsaOHavp06drz549stlsioqK0uOPP67Y2Fi3iqnAwMDr5mJfRvPmzdOAAQOcitK+ffuqfv36bsUrVaqURo8erbp16yo4OFjr169XyZIlNW7cOH3wwQfavHlzrvKlIPOivXv3Op6vW7dOPXv2VK9evRwnuCtWrNCQIUM0aNAgt8ZqPP/88ypWrJjee+89p+1vv/229u/fr2+++catvCMiIjRt2jTVqFFDZcuWVf/+/dWqVStt27ZN9957r06cOOFSvL1796p48eKy2WxOf5OsuNq/unfv3jpx4oRGjRrl6N+dlpamrl27Kjg4WO+//75eeuklbdq0SUuXLnUp9n///acdO3ZIuninpFChQi79/qWef/55RUZG6u2339bnn3+u7t27q2bNmlq9erVatmypr7/+OlfxL5Wbq8PeeG8lJyfrgw8+cEyffenV8pwUN9l599131bNnz0xTPqekpGjw4MHq27ev27E96fXXX9d///2nzz//XL6+vpIuniR07NhRISEhGjx4sEvxMn4WV69e7ZETnG+//VZPPvmk/Pz8rnhinpspuj0t4/iOS7k7hs6TLr0wlZ3c5Fq4cGGtXLlSpUqVcjfNq+aOO+7QsmXLVLhwYafty5YtU6NGjXJ8xbldu3ZXbGOz2dw+vl46RX3GmOm9MJo1a+bS90Px4sU1e/bsTHeWNmzYoEcffVQHDhzIcSxvn2d4S/pn4NLvJ5OLMa9NmjSRr6+vvvzyyyyXPnjggQfczve+++7Te++953QnVrp40t+nTx+tXLlSM2fOVI8ePbRz5063/53cMMaoSZMm+uWXX3TXXXfpjjvukDFGW7Zs0V9//aWmTZtq5syZLsf11MW+692gQYP07bff6ptvvlG9evX0yy+/aO/evXr11VfVt29fvfLKK7mKT0F2ldx3333q16+fHn30Uaftv/zyi/r06aM1a9a4HNNut2v16tUqXbq00/a///5b99xzj2OgvKteeeUV/fzzzypdurTWrVunPXv2KCgoSFOnTtWHH36YqzUnjh075vgC3r9/v7788kulpKSoadOmbh0sixYtqmXLlqlMmTJO27dv364aNWro6NGj+uuvv/TAAw945JZybqSlpSktLU158lzsKfzdd985rjC+9NJLypcvn9uxx44dqyeeeMLldVuy44331lNPPaUlS5YoNjY2y24PXbt2dTtfX19fHTx4MNOg+GPHjik0NDTXJ+Pnzp3T7t27VapUKcf/nzuKFi2qpUuXZupCu23bNtWoUUPHjh1zKV761fF0l14lz7jN6oLkSneFMspN1yJPcOWikztX8r3l9ddfV1BQkEcnovHWZ6tDhw5au3atFi9e7Fgr6ffff1eTJk3Ur1+/HHddbdGiRbb7UlNT9euvv+rs2bNu51m7dm2tXbtWqampKlu2rIwx+vvvv+Xr66s77rjDMSnH0qVLc7xG4xdffKHvv/9e48aNc0y2kZCQ4Jgc48UXX3QrV2+cZ3jLkiVLLrv/oYcecjlmkSJFtGjRIlWsWFF2u10rV65U2bJltWjRIvXo0cOtya3S+fv7a926dZnuEm3dulWVK1dWSkqK9uzZo+joaJ0+fTrHcdetW6cKFSo4fa/MmDHjsu/r7IwZM0Zdu3bVrFmzVLt2bad9ixYtUvPmzTVq1Cg9++yzV4zljYt96Vy5UOxuL4w333xTtWrVUs2aNbNcm89db775poYNG6YzZ85IujjRU8+ePTNdvHZLrkehIUfy589vNm/enGn75s2bTf78+d2KGRYWZr755ptM27/55hsTGhrqVkxjvDPgfMOGDea2224zPj4+pmzZso5BkEFBQY51TdLXE3NFgQIFslwTatasWY6pTbdv356raU6vB+Hh4SY4ONi0a9fOMZ12bnjjvWW32x1TRnuazWYzhw8fzrR94cKFLk3xfank5GTTrl074+vra3x9fR2DeDt37uyYiMIVBQoUyPJ9PmPGDLfeo4sXL87xw12pqalm27Zt5o8//jBLlixxerjCmxM6eFpWS3N4Y0C7p3Xp0sUUKFDAPPjgg+aVV14xr776qtPDHTabzRw6dCjT9n/++cft7y5jjElLSzOPPfaYeeCBB0xKSopZtGiRCQoKcmuty6zMnDnTREdHmwIFCrj1WU03bNgw07JlS6d1MpOSkszjjz9uhg8fbpKTk02zZs1M/fr1cxzTW8tJeOM8I11CQoJ55plnHGvZXfp5uBZ4c3KrSpUqmTZt2jhNcX/u3DnTpk0bxzp3S5cuNSVKlHAprs1mM3a73XTq1MkkJCSYQYMGmTx58riVY7169S77Xn///fdz/D715nJFY8eOdTyGDBliChYsaJ588kkzYsQIM2LECPPkk0+aggULmqFDh7ocO12DBg1McHCwyZcvn6lWrZrp3bu3mTNnjjl58qTbMdMlJyebVatWmT///NMj8dIxqcdVUq5cOfXv319ff/21Y8Dn2bNn1b9/f5UrV86tmN26ddPLL7+sNWvWOPrbx8XF6ZtvvslVFy1vDDh/7bXXVKFCBU2YMEETJkxQ48aN9eijj+qrr76SJHXu3FkffPCBy10qYmNj1b59e/3vf//TvffeK5vNppUrV2rAgAGOq0BLlixxTKN6tbkyoUlQUJAiIyMzXX3KiQMHDmj27NkaO3asateuraioKD333HNq06aNwsPDXY7njfdWwYIFc93tM6uYNpvNMW30peMlTp06pZdeesnt+G+88YbWr1+vxYsXq2HDho7tdevW1dtvv63evXu7FO+5555Tu3bttGPHDqe/6wcffOA01iyn3LmK7Iq4uDjFxMRo7969mcZ9unrXzZsTOqRbsmSJPvroI23ZskU2m03lypVTr169XL777o2lOkaOHJnjtjmZLCYrGzZsUKVKlSRJGzdudNrnatfl9HxtNpu++uorp6UZUlNT9fvvv+dqTInNZtPkyZPVqFEj1alTRxs2bNDAgQNz3e1n2bJlev3117Vu3Tq98sor6t27d47H+WVl8ODBWrBggdNdgJCQEPXr10/169dX165dXR6X4q2ug944z0jXtm1b7du3T3369PHYxA5//PGHRo8erV27dun777/XLbfcovHjxysqKsqt7nHeXFrlk08+UdOmTXXrrbeqYsWKstls2rBhg1JTUx2TROzatUsdO3Z0Ke7Ro0e1YcMGjR492jFm2d2JqDZs2KBBgwZlu/+RRx7J8XHIm8sVZezq/thjj+ndd991+tx36dJFo0aN0q+//ur2JE9z585VamqqVq5cqSVLlmjx4sX69NNPlZKSorvvvltxcXFu5x8QEOAYA+5RHivtcFl//vmnCQ0NNUWKFDF16tQxderUMUWKFDFFixZ1LGjrjqlTp5oaNWqYggULmoIFC5oaNWqYqVOn5irXsWPHOhZtNebiVKR2u91Ur17d7QULCxcubNavX2+MMebkyZPGZrOZVatWOfZv2bLF2O12l+NeuHDB9O/f34SHhzuusIeHh5v333/fXLhwwRhzcWHr/fv3u5V3bmW8upxxkcrsHgUKFHB7KuV0hw4dMkOGDDEVKlQwefPmNU2aNDEzZ840qampLsXx9Htr/Pjx5vHHHzfJyclux7jU2LFjzZgxY4zNZjMjRoxwuvI2adIks3z58lzFL168uFmxYoUxxnma27///tutBXxTU1PNhx9+aCIiIhz/5xEREebDDz90vF/dNWfOHKfFKUeNGmXuuusu89RTT5n//vvPrZh33XWXadWqldm8ebNJTEw0x48fd3pcS8aPH2/y5MljWrdubUaMGGGGDx9uWrdubfLmzWsmTpxodXqmRIkSTo/AwEBjs9kcny+bzWYCAwNNVFSU1akaY/5/vjabzURGRjrlXqZMGVO/fn3H0gU5ldW04UuXLjWRkZHm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ubqsSU6kn7hfbuxMbmYZDQoK0pdffqlhw4Zp165dMsaoVKlSTmPqLleIpRs2bJhjNsnhw4e7lUtOeeo8w1sLhEsX18zbsWNHpuJu6dKlLo33atmyZY7buvrd2rx5c8dSFZcb9+fK+8vf39/xuseMGaPPPvtMf/zxh4oXLy7p4rmQuzMu5+QznpMZFi+1e/duxwyiP/zwg5o0aaIBAwY4LvblRtu2bVWuXDmNHDlS06dPlzFG0dHRWrZsmapWrep23OnTp+v333/XlClT1LdvX911112qVauWatWqpQceeMDp85tT3hgHnxEF2VXijQUL33nnHX311Vfq3r27+vTpozfffFN79uzRzJkzczWpR7169fT888+rcuXK2r59uxo1aiRJ2rRpk9tfqJceKJ555plMbdw5UKxdu9ZRZEybNk3h4eFat26dfvjhB/Xt2/eaKsiyOnHx1KKdoaGhWrJkieMKU1aKFSuW4yvv3nhvDRw4UG+88Uam7ampqXrmmWc0efJkt+JKUq9evfTbb7/p008/1bPPPqtPPvlE//zzj0aPHq0PPvjA5XgfffSRevbsqRo1amjZsmX66KOPVKpUKc2fP1933323VqxYoRdeeMHlgcEjR47Um2++qTZt2mjWrFl67rnntHPnTq1atUqdOnVyOc+M7r//fsfaditXrtTUqVMlXVwC4tZbb3Ur5mOPPSbJea2njIvQuvuejY+P1+jRo+Xr6ytfX1+dPXtWJUuW1KBBgxxTf7uqR48e6tKli+Lj41WjRg3HVORjx47ViBEj3MpTunhXadasWbr33nvl4+Oj2267TfXq1VNISIgGDhzoOD66ok6dOurQoYO+/vprValSRTabTatXr9aLL76ounXrup1rdhdc+vXrp1OnTrkV8/vvv3ccr3/66Sft2bNHW7du1bhx4/Tmm29q2bJlOY7ljTsOV2OyGOliYebuBQjp/38Hpt9la9CggVsTLl2Op88zvFk4vvjii+ratau++eYb2Ww2/fvvv1qxYoV69uzp0neM3W73Wo4Z31ueep81bdpUrVu3VnR0tOLi4tS7d29HMWaM0QcffKB7773Xrdi5uVN1Od642JdR1apVNXHixFzHyah58+aOIjopKUl//PGHpk2bpmbNmslms7l1E+C9995T37599e2333p0Kn2HXHd6RI40btzYNGvWzBw+fNgE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\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i in column:\n",
    "    plt.figure(figsize=(10, 7))\n",
    "    sns.barplot(x='State/UT',y=i, data=data)\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "40bf7e65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29</td>\n",
       "      <td>5</td>\n",
       "      <td>34</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>51</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>42</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>391</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Murder  Kidnapping and Abduction  Rape  Theft\n",
       "0      29                         5    34     46\n",
       "1      16                        26    37    264\n",
       "2      51                        31    12    405\n",
       "3      37                        10    11    275\n",
       "4      42                        15    22    391"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features=['Murder', 'Kidnapping and Abduction', 'Rape', 'Theft']\n",
    "df=data[features]\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "45bfcd42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>30.537473</td>\n",
       "      <td>115.190578</td>\n",
       "      <td>33.743041</td>\n",
       "      <td>698.85546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>28.753082</td>\n",
       "      <td>158.570659</td>\n",
       "      <td>45.274870</td>\n",
       "      <td>1993.06392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>12.250000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>85.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>25.000000</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>237.50000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>43.000000</td>\n",
       "      <td>156.000000</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>541.75000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>307.000000</td>\n",
       "      <td>1754.000000</td>\n",
       "      <td>370.000000</td>\n",
       "      <td>19364.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Murder  Kidnapping and Abduction        Rape        Theft\n",
       "count  934.000000                934.000000  934.000000    934.00000\n",
       "mean    30.537473                115.190578   33.743041    698.85546\n",
       "std     28.753082                158.570659   45.274870   1993.06392\n",
       "min      0.000000                  0.000000    0.000000      0.00000\n",
       "25%      8.000000                 12.250000    6.000000     85.00000\n",
       "50%     25.000000                 51.000000   18.000000    237.50000\n",
       "75%     43.000000                156.000000   43.000000    541.75000\n",
       "max    307.000000               1754.000000  370.000000  19364.00000"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "91f71b25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.09446254, 0.00285063, 0.09189189, 0.00237554],\n",
       "       [0.05211726, 0.01482326, 0.1       , 0.01363355],\n",
       "       [0.16612378, 0.01767389, 0.03243243, 0.0209151 ],\n",
       "       ...,\n",
       "       [0.        , 0.        , 0.01081081, 0.00072299],\n",
       "       [0.        , 0.        , 0.        , 0.        ],\n",
       "       [0.09771987, 0.01368301, 0.02432432, 0.02607932]])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Scaling the data to standardize values\n",
    "scaler = MinMaxScaler()\n",
    "scaler.fit(df)\n",
    "s_df = scaler.transform(df)\n",
    "s_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c258ea4b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Murder  Kidnapping and Abduction      Rape     Theft\n",
      "0    0.094463                  0.002851  0.091892  0.002376\n",
      "1    0.052117                  0.014823  0.100000  0.013634\n",
      "2    0.166124                  0.017674  0.032432  0.020915\n",
      "3    0.120521                  0.005701  0.029730  0.014202\n",
      "4    0.136808                  0.008552  0.059459  0.020192\n",
      "..        ...                       ...       ...       ...\n",
      "929  0.006515                  0.003421  0.005405  0.000671\n",
      "930  0.009772                  0.001140  0.008108  0.000361\n",
      "931  0.000000                  0.000000  0.010811  0.000723\n",
      "932  0.000000                  0.000000  0.000000  0.000000\n",
      "933  0.097720                  0.013683  0.024324  0.026079\n",
      "\n",
      "[934 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "my_df=pd.DataFrame(np.array(s_df), columns=features)\n",
    "print(my_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "00461442",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "      <td>934.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.099471</td>\n",
       "      <td>0.065673</td>\n",
       "      <td>0.091197</td>\n",
       "      <td>0.036090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.093658</td>\n",
       "      <td>0.090405</td>\n",
       "      <td>0.122365</td>\n",
       "      <td>0.102926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.026059</td>\n",
       "      <td>0.006984</td>\n",
       "      <td>0.016216</td>\n",
       "      <td>0.004390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.081433</td>\n",
       "      <td>0.029076</td>\n",
       "      <td>0.048649</td>\n",
       "      <td>0.012265</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.140065</td>\n",
       "      <td>0.088940</td>\n",
       "      <td>0.116216</td>\n",
       "      <td>0.027977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Murder  Kidnapping and Abduction        Rape       Theft\n",
       "count  934.000000                934.000000  934.000000  934.000000\n",
       "mean     0.099471                  0.065673    0.091197    0.036090\n",
       "std      0.093658                  0.090405    0.122365    0.102926\n",
       "min      0.000000                  0.000000    0.000000    0.000000\n",
       "25%      0.026059                  0.006984    0.016216    0.004390\n",
       "50%      0.081433                  0.029076    0.048649    0.012265\n",
       "75%      0.140065                  0.088940    0.116216    0.027977\n",
       "max      1.000000                  1.000000    1.000000    1.000000"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5ac56d8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.094463</td>\n",
       "      <td>0.002851</td>\n",
       "      <td>0.091892</td>\n",
       "      <td>0.002376</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.052117</td>\n",
       "      <td>0.014823</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.013634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.166124</td>\n",
       "      <td>0.017674</td>\n",
       "      <td>0.032432</td>\n",
       "      <td>0.020915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.120521</td>\n",
       "      <td>0.005701</td>\n",
       "      <td>0.029730</td>\n",
       "      <td>0.014202</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.136808</td>\n",
       "      <td>0.008552</td>\n",
       "      <td>0.059459</td>\n",
       "      <td>0.020192</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Murder  Kidnapping and Abduction      Rape     Theft\n",
       "0  0.094463                  0.002851  0.091892  0.002376\n",
       "1  0.052117                  0.014823  0.100000  0.013634\n",
       "2  0.166124                  0.017674  0.032432  0.020915\n",
       "3  0.120521                  0.005701  0.029730  0.014202\n",
       "4  0.136808                  0.008552  0.059459  0.020192"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "963f95e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2e87b26a",
   "metadata": {},
   "outputs": [],
   "source": [
    "sse = []\n",
    "k_rng=range(1,10)\n",
    "for k in k_rng:\n",
    "    kmeans = KMeans(n_clusters=k)\n",
    "    kmeans.fit(my_df)\n",
    "    sse.append(kmeans.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d96f6bd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x22e311b1a80>]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('K')\n",
    "plt.ylabel('Sum of squared error')\n",
    "plt.plot(k_rng,sse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "ad6e84fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting yellowbrick\n",
      "  Downloading yellowbrick-1.5-py3-none-any.whl (282 kB)\n",
      "     -------------------------------------- 282.6/282.6 kB 1.7 MB/s eta 0:00:00\n",
      "Requirement already satisfied: scipy>=1.0.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from yellowbrick) (1.10.0)\n",
      "Requirement already satisfied: scikit-learn>=1.0.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from yellowbrick) (1.2.1)\n",
      "Requirement already satisfied: cycler>=0.10.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from yellowbrick) (0.11.0)\n",
      "Requirement already satisfied: numpy>=1.16.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from yellowbrick) (1.23.5)\n",
      "Requirement already satisfied: matplotlib!=3.0.0,>=2.0.2 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from yellowbrick) (3.7.0)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (2.8.2)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.0.5)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (22.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (4.25.0)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (9.4.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (3.0.9)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.4.4)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from scikit-learn>=1.0.0->yellowbrick) (2.2.0)\n",
      "Requirement already satisfied: joblib>=1.1.1 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from scikit-learn>=1.0.0->yellowbrick) (1.1.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\hp\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7->matplotlib!=3.0.0,>=2.0.2->yellowbrick) (1.16.0)\n",
      "Installing collected packages: yellowbrick\n",
      "Successfully installed yellowbrick-1.5\n"
     ]
    }
   ],
   "source": [
    "!pip install yellowbrick"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9143e46e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x550 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Distortion Score Elbow for KMeans Clustering'}, xlabel='k', ylabel='distortion score'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#finding the number of clusters using yellowbrick visualizer\n",
    "from yellowbrick.cluster import KElbowVisualizer\n",
    "model = KMeans()\n",
    "visualizer = KElbowVisualizer(model, k=(1,10), timings = False)\n",
    "visualizer.fit(my_df)\n",
    "visualizer.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "bf1694bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Ananlysis by dividing the District into 3 clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e3601455",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=3)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=3)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans = KMeans(3)\n",
    "kmeans.fit(my_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6ba42db0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#MEthod 1 : clustering using centroids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "66906570",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.067735</td>\n",
       "      <td>0.032539</td>\n",
       "      <td>0.045057</td>\n",
       "      <td>0.013617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.213294</td>\n",
       "      <td>0.172614</td>\n",
       "      <td>0.254777</td>\n",
       "      <td>0.061619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.210194</td>\n",
       "      <td>0.312160</td>\n",
       "      <td>0.273132</td>\n",
       "      <td>0.720309</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Murder  Kidnapping and Abduction      Rape     Theft\n",
       "0  0.067735                  0.032539  0.045057  0.013617\n",
       "1  0.213294                  0.172614  0.254777  0.061619\n",
       "2  0.210194                  0.312160  0.273132  0.720309"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "centroids=pd.DataFrame(kmeans.cluster_centers_, columns=features)\n",
    "centroids"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "c209bfb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Murder</th>\n",
       "      <td>0.067735</td>\n",
       "      <td>0.213294</td>\n",
       "      <td>0.210194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <td>0.032539</td>\n",
       "      <td>0.172614</td>\n",
       "      <td>0.312160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rape</th>\n",
       "      <td>0.045057</td>\n",
       "      <td>0.254777</td>\n",
       "      <td>0.273132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Theft</th>\n",
       "      <td>0.013617</td>\n",
       "      <td>0.061619</td>\n",
       "      <td>0.720309</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 0         1         2\n",
       "Murder                    0.067735  0.213294  0.210194\n",
       "Kidnapping and Abduction  0.032539  0.172614  0.312160\n",
       "Rape                      0.045057  0.254777  0.273132\n",
       "Theft                     0.013617  0.061619  0.720309"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cen=centroids.T\n",
    "cen"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "e4ab9e4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_labels(my_df, cen):\n",
    "    distances = cen.apply(lambda x: np.sqrt(((df-x)**2).sum(axis=1)))\n",
    "    return distances.idxmin(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "26e9d832",
   "metadata": {},
   "outputs": [],
   "source": [
    "labels=get_labels(my_df, cen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "0d36dff8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    877\n",
       "0     54\n",
       "1      3\n",
       "dtype: int64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "labels.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "88dcb632",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 2: Using PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "1ab103dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "pca=PCA()\n",
    "x=pca.fit_transform(my_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "98e7ad11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 2])"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans=KMeans(3)\n",
    "label=kmeans.fit_predict(df)\n",
    "unique_labels=np.unique(label)\n",
    "unique_labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3ad35de8",
   "metadata": {},
   "outputs": [
    {
     "ename": "InvalidIndexError",
     "evalue": "(array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True, False,  True,  True,\n        True,  True, False,  True,  True,  True,  True,  True, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False, False,  True,  True,  True, False,  True,  True,\n        True,  True,  True, False,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True, False, False, False,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True, False,  True, False,  True,\n        True, False,  True,  True,  True, False, False,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False, False,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True, False, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True, False,\n       False,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n       False,  True, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True,  True, False,  True, False, False, False, False, False,\n       False, False, False,  True,  True,  True, False, False, False,\n       False, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True]), 0)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3802\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3801\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3802\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3803\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx:138\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx:144\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mTypeError\u001b[0m: '(array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True, False,  True,  True,\n        True,  True, False,  True,  True,  True,  True,  True, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False, False,  True,  True,  True, False,  True,  True,\n        True,  True,  True, False,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True, False, False, False,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True, False,  True, False,  True,\n        True, False,  True,  True,  True, False, False,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False, False,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True, False, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True, False,\n       False,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n       False,  True, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True,  True, False,  True, False, False, False, False, False,\n       False, False, False,  True,  True,  True, False, False, False,\n       False, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True]), 0)' is an invalid key",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[1;31mInvalidIndexError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[48], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m unique_labels:\n\u001b[1;32m----> 2\u001b[0m     plt\u001b[38;5;241m.\u001b[39mscatter(\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[43mlabel\u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43mi\u001b[49m\u001b[43m,\u001b[49m\u001b[38;5;241;43m0\u001b[39;49m\u001b[43m]\u001b[49m,X[label\u001b[38;5;241m==\u001b[39mi,\u001b[38;5;241m1\u001b[39m], s\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m20\u001b[39m)\n\u001b[0;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mscatter(kmeans\u001b[38;5;241m.\u001b[39mcluster_centers_[:,\u001b[38;5;241m0\u001b[39m],kmeans\u001b[38;5;241m.\u001b[39mcluster_centers_[:,\u001b[38;5;241m1\u001b[39m],color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mblack\u001b[39m\u001b[38;5;124m'\u001b[39m,marker\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m*\u001b[39m\u001b[38;5;124m'\u001b[39m,label\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcentroid\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m      6\u001b[0m plt\u001b[38;5;241m.\u001b[39mlegend()\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py:3807\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3805\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3806\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3807\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3808\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3809\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3809\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3804\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3805\u001b[0m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3806\u001b[0m         \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3807\u001b[0m         \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3808\u001b[0m         \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[1;32m-> 3809\u001b[0m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_check_indexing_error\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3810\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m\n\u001b[0;32m   3812\u001b[0m \u001b[38;5;66;03m# GH#42269\u001b[39;00m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py:5925\u001b[0m, in \u001b[0;36mIndex._check_indexing_error\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   5921\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_check_indexing_error\u001b[39m(\u001b[38;5;28mself\u001b[39m, key):\n\u001b[0;32m   5922\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_scalar(key):\n\u001b[0;32m   5923\u001b[0m         \u001b[38;5;66;03m# if key is not a scalar, directly raise an error (the code below\u001b[39;00m\n\u001b[0;32m   5924\u001b[0m         \u001b[38;5;66;03m# would convert to numpy arrays and raise later any way) - GH29926\u001b[39;00m\n\u001b[1;32m-> 5925\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m InvalidIndexError(key)\n",
      "\u001b[1;31mInvalidIndexError\u001b[0m: (array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True, False,  True,  True,\n        True,  True, False,  True,  True,  True,  True,  True, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False, False,  True,  True,  True, False,  True,  True,\n        True,  True,  True, False,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False,  True,\n        True, False,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True, False, False, False,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True, False,  True, False,  True,\n        True, False,  True,  True,  True, False, False,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False, False,  True,  True,  True,\n       False,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True, False,  True,  True, False, False,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True, False,\n       False,  True,  True,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False,  True, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True, False, False, False,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True, False,  True,  True,  True,\n       False,  True, False,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False,  True, False,\n        True,  True, False,  True, False, False, False, False, False,\n       False, False, False,  True,  True,  True, False, False, False,\n       False, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True]), 0)"
     ]
    }
   ],
   "source": [
    "for i in unique_labels:\n",
    "    plt.scatter(df[label==i,0],x[label==i,1], s=20)\n",
    "    \n",
    "plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color='black',marker='*',label='centroid')\n",
    "    \n",
    "plt.legend()\n",
    "plt.title('CRIME BASED AREAS')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "c2a9fce2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     0\n",
      "0    0\n",
      "1    0\n",
      "2    0\n",
      "3    0\n",
      "4    0\n",
      "..  ..\n",
      "929  0\n",
      "930  0\n",
      "931  0\n",
      "932  0\n",
      "933  0\n",
      "\n",
      "[934 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "label=pd.DataFrame(np.array(label))\n",
    "print(label)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "d5c0aec8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    860\n",
       "2     59\n",
       "1     15\n",
       "dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "label.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "af0c978f",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Cluster']=label"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "f5a4e52a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Alluri Sitharama Raju</td>\n",
       "      <td>29</td>\n",
       "      <td>5</td>\n",
       "      <td>34</td>\n",
       "      <td>46</td>\n",
       "      <td>114</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anakapalli</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>264</td>\n",
       "      <td>343</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anantapuramu</td>\n",
       "      <td>51</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>405</td>\n",
       "      <td>499</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Annamayya</td>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>275</td>\n",
       "      <td>333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Bapatla</td>\n",
       "      <td>42</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>391</td>\n",
       "      <td>470</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          State/UT               District  Murder  Kidnapping and Abduction  \\\n",
       "0   Andhra Pradesh  Alluri Sitharama Raju      29                         5   \n",
       "1   Andhra Pradesh             Anakapalli      16                        26   \n",
       "2   Andhra Pradesh           Anantapuramu      51                        31   \n",
       "3   Andhra Pradesh              Annamayya      37                        10   \n",
       "4   Andhra Pradesh                Bapatla      42                        15   \n",
       "\n",
       "   Rape  Theft  Total_crimes  Cluster  \n",
       "0    34     46           114        0  \n",
       "1    37    264           343        0  \n",
       "2    12    405           499        0  \n",
       "3    11    275           333        0  \n",
       "4    22    391           470        0  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "841aecd3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>874</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>IGI Airport</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>282</td>\n",
       "      <td>288</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>875</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Metro</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3729</td>\n",
       "      <td>3736</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>876</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>New Delhi</td>\n",
       "      <td>7</td>\n",
       "      <td>32</td>\n",
       "      <td>11</td>\n",
       "      <td>1350</td>\n",
       "      <td>1400</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>877</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North</td>\n",
       "      <td>37</td>\n",
       "      <td>326</td>\n",
       "      <td>49</td>\n",
       "      <td>14023</td>\n",
       "      <td>14435</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-East</td>\n",
       "      <td>44</td>\n",
       "      <td>556</td>\n",
       "      <td>76</td>\n",
       "      <td>19364</td>\n",
       "      <td>20040</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-West</td>\n",
       "      <td>44</td>\n",
       "      <td>310</td>\n",
       "      <td>67</td>\n",
       "      <td>18480</td>\n",
       "      <td>18901</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>880</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer</td>\n",
       "      <td>33</td>\n",
       "      <td>483</td>\n",
       "      <td>65</td>\n",
       "      <td>15120</td>\n",
       "      <td>15701</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>RAILWAY</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>3089</td>\n",
       "      <td>3111</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>882</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South</td>\n",
       "      <td>40</td>\n",
       "      <td>400</td>\n",
       "      <td>94</td>\n",
       "      <td>15243</td>\n",
       "      <td>15777</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>883</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-East</td>\n",
       "      <td>43</td>\n",
       "      <td>490</td>\n",
       "      <td>121</td>\n",
       "      <td>17144</td>\n",
       "      <td>17798</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>884</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-West</td>\n",
       "      <td>18</td>\n",
       "      <td>332</td>\n",
       "      <td>84</td>\n",
       "      <td>7461</td>\n",
       "      <td>7895</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Spl Cell</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>SPUWAC</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Vigilance</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>West</td>\n",
       "      <td>31</td>\n",
       "      <td>312</td>\n",
       "      <td>76</td>\n",
       "      <td>18360</td>\n",
       "      <td>18779</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Rohini</td>\n",
       "      <td>43</td>\n",
       "      <td>408</td>\n",
       "      <td>82</td>\n",
       "      <td>12058</td>\n",
       "      <td>12591</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Shahdara</td>\n",
       "      <td>16</td>\n",
       "      <td>270</td>\n",
       "      <td>67</td>\n",
       "      <td>11122</td>\n",
       "      <td>11475</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>891</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Dwarka</td>\n",
       "      <td>30</td>\n",
       "      <td>460</td>\n",
       "      <td>145</td>\n",
       "      <td>16581</td>\n",
       "      <td>17216</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>892</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer North</td>\n",
       "      <td>57</td>\n",
       "      <td>730</td>\n",
       "      <td>76</td>\n",
       "      <td>9044</td>\n",
       "      <td>9907</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>893</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Anantnag</td>\n",
       "      <td>5</td>\n",
       "      <td>69</td>\n",
       "      <td>19</td>\n",
       "      <td>134</td>\n",
       "      <td>227</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>894</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Awantipora</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>54</td>\n",
       "      <td>87</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>895</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Bandipora</td>\n",
       "      <td>2</td>\n",
       "      <td>26</td>\n",
       "      <td>5</td>\n",
       "      <td>62</td>\n",
       "      <td>95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>896</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Baramulla</td>\n",
       "      <td>9</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>116</td>\n",
       "      <td>188</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>897</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Budgam</td>\n",
       "      <td>4</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>107</td>\n",
       "      <td>190</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>898</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Special Crime Wing Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>899</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Special Crime Wing Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>900</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Doda</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>12</td>\n",
       "      <td>24</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>901</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Ganderbal</td>\n",
       "      <td>1</td>\n",
       "      <td>39</td>\n",
       "      <td>9</td>\n",
       "      <td>91</td>\n",
       "      <td>140</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>902</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Handwara</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>71</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>903</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Jammu</td>\n",
       "      <td>9</td>\n",
       "      <td>146</td>\n",
       "      <td>57</td>\n",
       "      <td>588</td>\n",
       "      <td>800</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>904</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Kathua</td>\n",
       "      <td>7</td>\n",
       "      <td>43</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>156</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>905</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Kishtwar</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>906</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Kulgam</td>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>10</td>\n",
       "      <td>88</td>\n",
       "      <td>141</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>907</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Kupwara</td>\n",
       "      <td>2</td>\n",
       "      <td>47</td>\n",
       "      <td>9</td>\n",
       "      <td>56</td>\n",
       "      <td>114</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Poonch</td>\n",
       "      <td>4</td>\n",
       "      <td>46</td>\n",
       "      <td>22</td>\n",
       "      <td>65</td>\n",
       "      <td>137</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Pulwama</td>\n",
       "      <td>6</td>\n",
       "      <td>27</td>\n",
       "      <td>4</td>\n",
       "      <td>53</td>\n",
       "      <td>90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>910</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Railways Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>911</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Railways Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>912</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Railways Katra</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>913</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Rajouri</td>\n",
       "      <td>10</td>\n",
       "      <td>57</td>\n",
       "      <td>34</td>\n",
       "      <td>68</td>\n",
       "      <td>169</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>914</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Ramban</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>59</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>915</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Reasi</td>\n",
       "      <td>7</td>\n",
       "      <td>37</td>\n",
       "      <td>17</td>\n",
       "      <td>41</td>\n",
       "      <td>102</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Samba</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>113</td>\n",
       "      <td>150</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Shopian</td>\n",
       "      <td>4</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>118</td>\n",
       "      <td>149</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>918</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Sopore</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>88</td>\n",
       "      <td>110</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>919</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Srinagar</td>\n",
       "      <td>13</td>\n",
       "      <td>118</td>\n",
       "      <td>12</td>\n",
       "      <td>390</td>\n",
       "      <td>533</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>920</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Udhampur</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>11</td>\n",
       "      <td>85</td>\n",
       "      <td>150</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>921</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Cyber Crime Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>922</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Cyber Crime Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>923</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Anti Narcotic Task Force Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>924</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>Anti Narcotic Task Force Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>925</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>EOW Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>926</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>EOW Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>927</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>CICE Jammu</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>928</th>\n",
       "      <td>Jammu &amp; Kashmir</td>\n",
       "      <td>CICE Kashmir</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929</th>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Kargil</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Leh</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Karaikal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>30</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>505</td>\n",
       "      <td>568</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            State/UT                          District  Murder  \\\n",
       "874            Delhi                       IGI Airport       0   \n",
       "875            Delhi                             Metro       1   \n",
       "876            Delhi                         New Delhi       7   \n",
       "877            Delhi                             North      37   \n",
       "878            Delhi                        North-East      44   \n",
       "879            Delhi                        North-West      44   \n",
       "880            Delhi                             Outer      33   \n",
       "881            Delhi                           RAILWAY       7   \n",
       "882            Delhi                             South      40   \n",
       "883            Delhi                        South-East      43   \n",
       "884            Delhi                        South-West      18   \n",
       "885            Delhi                          Spl Cell       0   \n",
       "886            Delhi                            SPUWAC       0   \n",
       "887            Delhi                         Vigilance       0   \n",
       "888            Delhi                              West      31   \n",
       "889            Delhi                            Rohini      43   \n",
       "890            Delhi                          Shahdara      16   \n",
       "891            Delhi                            Dwarka      30   \n",
       "892            Delhi                       Outer North      57   \n",
       "893  Jammu & Kashmir                          Anantnag       5   \n",
       "894  Jammu & Kashmir                        Awantipora       0   \n",
       "895  Jammu & Kashmir                         Bandipora       2   \n",
       "896  Jammu & Kashmir                         Baramulla       9   \n",
       "897  Jammu & Kashmir                            Budgam       4   \n",
       "898  Jammu & Kashmir          Special Crime Wing Jammu       0   \n",
       "899  Jammu & Kashmir        Special Crime Wing Kashmir       0   \n",
       "900  Jammu & Kashmir                              Doda       1   \n",
       "901  Jammu & Kashmir                         Ganderbal       1   \n",
       "902  Jammu & Kashmir                          Handwara       0   \n",
       "903  Jammu & Kashmir                             Jammu       9   \n",
       "904  Jammu & Kashmir                            Kathua       7   \n",
       "905  Jammu & Kashmir                          Kishtwar       0   \n",
       "906  Jammu & Kashmir                            Kulgam       0   \n",
       "907  Jammu & Kashmir                           Kupwara       2   \n",
       "908  Jammu & Kashmir                            Poonch       4   \n",
       "909  Jammu & Kashmir                           Pulwama       6   \n",
       "910  Jammu & Kashmir                    Railways Jammu       0   \n",
       "911  Jammu & Kashmir                  Railways Kashmir       0   \n",
       "912  Jammu & Kashmir                    Railways Katra       1   \n",
       "913  Jammu & Kashmir                           Rajouri      10   \n",
       "914  Jammu & Kashmir                            Ramban       2   \n",
       "915  Jammu & Kashmir                             Reasi       7   \n",
       "916  Jammu & Kashmir                             Samba       0   \n",
       "917  Jammu & Kashmir                           Shopian       4   \n",
       "918  Jammu & Kashmir                            Sopore       0   \n",
       "919  Jammu & Kashmir                          Srinagar      13   \n",
       "920  Jammu & Kashmir                          Udhampur      12   \n",
       "921  Jammu & Kashmir                 Cyber Crime Jammu       0   \n",
       "922  Jammu & Kashmir               Cyber Crime Kashmir       0   \n",
       "923  Jammu & Kashmir    Anti Narcotic Task Force Jammu       0   \n",
       "924  Jammu & Kashmir  Anti Narcotic Task Force Kashmir       0   \n",
       "925  Jammu & Kashmir                         EOW Jammu       0   \n",
       "926  Jammu & Kashmir                       EOW Kashmir       0   \n",
       "927  Jammu & Kashmir                        CICE Jammu       0   \n",
       "928  Jammu & Kashmir                      CICE Kashmir       0   \n",
       "929           Ladakh                            Kargil       2   \n",
       "930           Ladakh                               Leh       3   \n",
       "931      Lakshadweep                       Lakshadweep       0   \n",
       "932       Puducherry                          Karaikal       0   \n",
       "933       Puducherry                        Puducherry      30   \n",
       "\n",
       "     Kidnapping and Abduction  Rape  Theft  Total_crimes  Cluster  \n",
       "874                         2     4    282           288        0  \n",
       "875                         5     1   3729          3736        2  \n",
       "876                        32    11   1350          1400        0  \n",
       "877                       326    49  14023         14435        1  \n",
       "878                       556    76  19364         20040        1  \n",
       "879                       310    67  18480         18901        1  \n",
       "880                       483    65  15120         15701        1  \n",
       "881                        14     1   3089          3111        2  \n",
       "882                       400    94  15243         15777        1  \n",
       "883                       490   121  17144         17798        1  \n",
       "884                       332    84   7461          7895        2  \n",
       "885                         0     0      0             0        0  \n",
       "886                         0     0      0             0        0  \n",
       "887                         0     0      0             0        0  \n",
       "888                       312    76  18360         18779        1  \n",
       "889                       408    82  12058         12591        1  \n",
       "890                       270    67  11122         11475        1  \n",
       "891                       460   145  16581         17216        1  \n",
       "892                       730    76   9044          9907        1  \n",
       "893                        69    19    134           227        0  \n",
       "894                        31     2     54            87        0  \n",
       "895                        26     5     62            95        0  \n",
       "896                        53    10    116           188        0  \n",
       "897                        65    14    107           190        0  \n",
       "898                         0     0      0             0        0  \n",
       "899                         0     0      0             0        0  \n",
       "900                        21    12     24            58        0  \n",
       "901                        39     9     91           140        0  \n",
       "902                        29     0     71           100        0  \n",
       "903                       146    57    588           800        0  \n",
       "904                        43    15     91           156        0  \n",
       "905                        22     4      5            31        0  \n",
       "906                        43    10     88           141        0  \n",
       "907                        47     9     56           114        0  \n",
       "908                        46    22     65           137        0  \n",
       "909                        27     4     53            90        0  \n",
       "910                         0     0     12            12        0  \n",
       "911                         0     0     14            14        0  \n",
       "912                         0     1      5             7        0  \n",
       "913                        57    34     68           169        0  \n",
       "914                        15     4     59            80        0  \n",
       "915                        37    17     41           102        0  \n",
       "916                        24    13    113           150        0  \n",
       "917                        26     1    118           149        0  \n",
       "918                        20     2     88           110        0  \n",
       "919                       118    12    390           533        0  \n",
       "920                        42    11     85           150        0  \n",
       "921                         0     0      0             0        0  \n",
       "922                         0     0      0             0        0  \n",
       "923                         0     0      0             0        0  \n",
       "924                         0     0      0             0        0  \n",
       "925                         0     0      0             0        0  \n",
       "926                         0     0      0             0        0  \n",
       "927                         0     0      0             0        0  \n",
       "928                         0     0      0             0        0  \n",
       "929                         6     2     13            23        0  \n",
       "930                         2     3      7            15        0  \n",
       "931                         0     4     14            18        0  \n",
       "932                         0     0      0             0        0  \n",
       "933                        24     9    505           568        0  "
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail(60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "6a4fdab4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Alluri Sitharama Raju</td>\n",
       "      <td>29</td>\n",
       "      <td>5</td>\n",
       "      <td>34</td>\n",
       "      <td>46</td>\n",
       "      <td>114</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anakapalli</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>264</td>\n",
       "      <td>343</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Anantapuramu</td>\n",
       "      <td>51</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>405</td>\n",
       "      <td>499</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Annamayya</td>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>275</td>\n",
       "      <td>333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Andhra Pradesh</td>\n",
       "      <td>Bapatla</td>\n",
       "      <td>42</td>\n",
       "      <td>15</td>\n",
       "      <td>22</td>\n",
       "      <td>391</td>\n",
       "      <td>470</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>929</th>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Kargil</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>Ladakh</td>\n",
       "      <td>Leh</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>Lakshadweep</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Karaikal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>Puducherry</td>\n",
       "      <td>Puducherry</td>\n",
       "      <td>30</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>505</td>\n",
       "      <td>568</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>860 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            State/UT               District  Murder  Kidnapping and Abduction  \\\n",
       "0     Andhra Pradesh  Alluri Sitharama Raju      29                         5   \n",
       "1     Andhra Pradesh             Anakapalli      16                        26   \n",
       "2     Andhra Pradesh           Anantapuramu      51                        31   \n",
       "3     Andhra Pradesh              Annamayya      37                        10   \n",
       "4     Andhra Pradesh                Bapatla      42                        15   \n",
       "..               ...                    ...     ...                       ...   \n",
       "929           Ladakh                 Kargil       2                         6   \n",
       "930           Ladakh                    Leh       3                         2   \n",
       "931      Lakshadweep            Lakshadweep       0                         0   \n",
       "932       Puducherry               Karaikal       0                         0   \n",
       "933       Puducherry             Puducherry      30                        24   \n",
       "\n",
       "     Rape  Theft  Total_crimes  Cluster  \n",
       "0      34     46           114        0  \n",
       "1      37    264           343        0  \n",
       "2      12    405           499        0  \n",
       "3      11    275           333        0  \n",
       "4      22    391           470        0  \n",
       "..    ...    ...           ...      ...  \n",
       "929     2     13            23        0  \n",
       "930     3      7            15        0  \n",
       "931     4     14            18        0  \n",
       "932     0      0             0        0  \n",
       "933     9    505           568        0  \n",
       "\n",
       "[860 rows x 8 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Moderate_area=data[data['Cluster']==0]\n",
    "Moderate_area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "b9877ca4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>860.000000</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>860.000000</td>\n",
       "      <td>860.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>27.247674</td>\n",
       "      <td>91.196512</td>\n",
       "      <td>27.580233</td>\n",
       "      <td>311.615116</td>\n",
       "      <td>457.639535</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>23.699227</td>\n",
       "      <td>113.259239</td>\n",
       "      <td>35.793084</td>\n",
       "      <td>331.564488</td>\n",
       "      <td>442.614760</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>70.750000</td>\n",
       "      <td>128.750000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>23.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>204.000000</td>\n",
       "      <td>336.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>41.000000</td>\n",
       "      <td>131.250000</td>\n",
       "      <td>37.000000</td>\n",
       "      <td>417.250000</td>\n",
       "      <td>645.750000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>124.000000</td>\n",
       "      <td>700.000000</td>\n",
       "      <td>301.000000</td>\n",
       "      <td>1460.000000</td>\n",
       "      <td>2315.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Murder  Kidnapping and Abduction        Rape        Theft  \\\n",
       "count  860.000000                860.000000  860.000000   860.000000   \n",
       "mean    27.247674                 91.196512   27.580233   311.615116   \n",
       "std     23.699227                113.259239   35.793084   331.564488   \n",
       "min      0.000000                  0.000000    0.000000     0.000000   \n",
       "25%      7.000000                 11.000000    5.000000    70.750000   \n",
       "50%     23.000000                 46.000000   16.000000   204.000000   \n",
       "75%     41.000000                131.250000   37.000000   417.250000   \n",
       "max    124.000000                700.000000  301.000000  1460.000000   \n",
       "\n",
       "       Total_crimes  Cluster  \n",
       "count    860.000000    860.0  \n",
       "mean     457.639535      0.0  \n",
       "std      442.614760      0.0  \n",
       "min        0.000000      0.0  \n",
       "25%      128.750000      0.0  \n",
       "50%      336.000000      0.0  \n",
       "75%      645.750000      0.0  \n",
       "max     2315.000000      0.0  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Moderate_area.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "83fabca4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>630</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Udaipur</td>\n",
       "      <td>114</td>\n",
       "      <td>586</td>\n",
       "      <td>283</td>\n",
       "      <td>1332</td>\n",
       "      <td>2315</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Aligarh</td>\n",
       "      <td>98</td>\n",
       "      <td>653</td>\n",
       "      <td>57</td>\n",
       "      <td>1321</td>\n",
       "      <td>2129</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>140</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Vaishali</td>\n",
       "      <td>117</td>\n",
       "      <td>525</td>\n",
       "      <td>15</td>\n",
       "      <td>1434</td>\n",
       "      <td>2091</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Rewa</td>\n",
       "      <td>65</td>\n",
       "      <td>521</td>\n",
       "      <td>77</td>\n",
       "      <td>1299</td>\n",
       "      <td>1962</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Purnea</td>\n",
       "      <td>80</td>\n",
       "      <td>425</td>\n",
       "      <td>79</td>\n",
       "      <td>1343</td>\n",
       "      <td>1927</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>Cyber Rajkot Range</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>808</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Vasanasi Dehat</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>807</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Kanpur Outer</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>806</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Lucknow Grameen</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>467</th>\n",
       "      <td>Manipur</td>\n",
       "      <td>CID</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>860 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           State/UT            District  Murder  Kidnapping and Abduction  \\\n",
       "630       Rajasthan             Udaipur     114                       586   \n",
       "732   Uttar Pradesh             Aligarh      98                       653   \n",
       "140           Bihar            Vaishali     117                       525   \n",
       "396  Madhya Pradesh                Rewa      65                       521   \n",
       "130           Bihar              Purnea      80                       425   \n",
       "..              ...                 ...     ...                       ...   \n",
       "227         Gujarat  Cyber Rajkot Range       0                         0   \n",
       "808   Uttar Pradesh      Vasanasi Dehat       0                         0   \n",
       "807   Uttar Pradesh        Kanpur Outer       0                         0   \n",
       "806   Uttar Pradesh     Lucknow Grameen       0                         0   \n",
       "467         Manipur                 CID       0                         0   \n",
       "\n",
       "     Rape  Theft  Total_crimes  Cluster  \n",
       "630   283   1332          2315        0  \n",
       "732    57   1321          2129        0  \n",
       "140    15   1434          2091        0  \n",
       "396    77   1299          1962        0  \n",
       "130    79   1343          1927        0  \n",
       "..    ...    ...           ...      ...  \n",
       "227     0      0             0        0  \n",
       "808     0      0             0        0  \n",
       "807     0      0             0        0  \n",
       "806     0      0             0        0  \n",
       "467     0      0             0        0  \n",
       "\n",
       "[860 rows x 8 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Moderate_area.sort_values('Total_crimes', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "05150673",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>433</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mumbai Commr.</td>\n",
       "      <td>135</td>\n",
       "      <td>1754</td>\n",
       "      <td>370</td>\n",
       "      <td>17876</td>\n",
       "      <td>20135</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mumbai Railway</td>\n",
       "      <td>6</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>12589</td>\n",
       "      <td>12616</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>870</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Central</td>\n",
       "      <td>22</td>\n",
       "      <td>219</td>\n",
       "      <td>111</td>\n",
       "      <td>9370</td>\n",
       "      <td>9722</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>East</td>\n",
       "      <td>36</td>\n",
       "      <td>292</td>\n",
       "      <td>82</td>\n",
       "      <td>14828</td>\n",
       "      <td>15238</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>877</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North</td>\n",
       "      <td>37</td>\n",
       "      <td>326</td>\n",
       "      <td>49</td>\n",
       "      <td>14023</td>\n",
       "      <td>14435</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-East</td>\n",
       "      <td>44</td>\n",
       "      <td>556</td>\n",
       "      <td>76</td>\n",
       "      <td>19364</td>\n",
       "      <td>20040</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-West</td>\n",
       "      <td>44</td>\n",
       "      <td>310</td>\n",
       "      <td>67</td>\n",
       "      <td>18480</td>\n",
       "      <td>18901</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>880</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer</td>\n",
       "      <td>33</td>\n",
       "      <td>483</td>\n",
       "      <td>65</td>\n",
       "      <td>15120</td>\n",
       "      <td>15701</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>882</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South</td>\n",
       "      <td>40</td>\n",
       "      <td>400</td>\n",
       "      <td>94</td>\n",
       "      <td>15243</td>\n",
       "      <td>15777</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>883</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-East</td>\n",
       "      <td>43</td>\n",
       "      <td>490</td>\n",
       "      <td>121</td>\n",
       "      <td>17144</td>\n",
       "      <td>17798</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>West</td>\n",
       "      <td>31</td>\n",
       "      <td>312</td>\n",
       "      <td>76</td>\n",
       "      <td>18360</td>\n",
       "      <td>18779</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Rohini</td>\n",
       "      <td>43</td>\n",
       "      <td>408</td>\n",
       "      <td>82</td>\n",
       "      <td>12058</td>\n",
       "      <td>12591</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Shahdara</td>\n",
       "      <td>16</td>\n",
       "      <td>270</td>\n",
       "      <td>67</td>\n",
       "      <td>11122</td>\n",
       "      <td>11475</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>891</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Dwarka</td>\n",
       "      <td>30</td>\n",
       "      <td>460</td>\n",
       "      <td>145</td>\n",
       "      <td>16581</td>\n",
       "      <td>17216</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>892</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer North</td>\n",
       "      <td>57</td>\n",
       "      <td>730</td>\n",
       "      <td>76</td>\n",
       "      <td>9044</td>\n",
       "      <td>9907</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        State/UT        District  Murder  Kidnapping and Abduction  Rape  \\\n",
       "433  Maharashtra   Mumbai Commr.     135                      1754   370   \n",
       "434  Maharashtra  Mumbai Railway       6                        20     1   \n",
       "870        Delhi         Central      22                       219   111   \n",
       "872        Delhi            East      36                       292    82   \n",
       "877        Delhi           North      37                       326    49   \n",
       "878        Delhi      North-East      44                       556    76   \n",
       "879        Delhi      North-West      44                       310    67   \n",
       "880        Delhi           Outer      33                       483    65   \n",
       "882        Delhi           South      40                       400    94   \n",
       "883        Delhi      South-East      43                       490   121   \n",
       "888        Delhi            West      31                       312    76   \n",
       "889        Delhi          Rohini      43                       408    82   \n",
       "890        Delhi        Shahdara      16                       270    67   \n",
       "891        Delhi          Dwarka      30                       460   145   \n",
       "892        Delhi     Outer North      57                       730    76   \n",
       "\n",
       "     Theft  Total_crimes  Cluster  \n",
       "433  17876         20135        1  \n",
       "434  12589         12616        1  \n",
       "870   9370          9722        1  \n",
       "872  14828         15238        1  \n",
       "877  14023         14435        1  \n",
       "878  19364         20040        1  \n",
       "879  18480         18901        1  \n",
       "880  15120         15701        1  \n",
       "882  15243         15777        1  \n",
       "883  17144         17798        1  \n",
       "888  18360         18779        1  \n",
       "889  12058         12591        1  \n",
       "890  11122         11475        1  \n",
       "891  16581         17216        1  \n",
       "892   9044          9907        1  "
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Peaceful_Area=data[data['Cluster']==1]\n",
    "Peaceful_Area\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "854a9b91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.0000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>41.133333</td>\n",
       "      <td>468.666667</td>\n",
       "      <td>98.8000</td>\n",
       "      <td>14746.800000</td>\n",
       "      <td>15355.400000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>28.853984</td>\n",
       "      <td>391.108620</td>\n",
       "      <td>81.8022</td>\n",
       "      <td>3322.929886</td>\n",
       "      <td>3497.882866</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>9044.000000</td>\n",
       "      <td>9722.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>30.500000</td>\n",
       "      <td>301.000000</td>\n",
       "      <td>67.0000</td>\n",
       "      <td>12323.500000</td>\n",
       "      <td>12603.500000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>37.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>76.0000</td>\n",
       "      <td>15120.000000</td>\n",
       "      <td>15701.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>43.500000</td>\n",
       "      <td>486.500000</td>\n",
       "      <td>102.5000</td>\n",
       "      <td>17510.000000</td>\n",
       "      <td>18288.500000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>135.000000</td>\n",
       "      <td>1754.000000</td>\n",
       "      <td>370.0000</td>\n",
       "      <td>19364.000000</td>\n",
       "      <td>20135.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Murder  Kidnapping and Abduction      Rape         Theft  \\\n",
       "count   15.000000                 15.000000   15.0000     15.000000   \n",
       "mean    41.133333                468.666667   98.8000  14746.800000   \n",
       "std     28.853984                391.108620   81.8022   3322.929886   \n",
       "min      6.000000                 20.000000    1.0000   9044.000000   \n",
       "25%     30.500000                301.000000   67.0000  12323.500000   \n",
       "50%     37.000000                400.000000   76.0000  15120.000000   \n",
       "75%     43.500000                486.500000  102.5000  17510.000000   \n",
       "max    135.000000               1754.000000  370.0000  19364.000000   \n",
       "\n",
       "       Total_crimes  Cluster  \n",
       "count     15.000000     15.0  \n",
       "mean   15355.400000      1.0  \n",
       "std     3497.882866      0.0  \n",
       "min     9722.000000      1.0  \n",
       "25%    12603.500000      1.0  \n",
       "50%    15701.000000      1.0  \n",
       "75%    18288.500000      1.0  \n",
       "max    20135.000000      1.0  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Peaceful_Area.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "40c1111f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>433</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mumbai Commr.</td>\n",
       "      <td>135</td>\n",
       "      <td>1754</td>\n",
       "      <td>370</td>\n",
       "      <td>17876</td>\n",
       "      <td>20135</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-East</td>\n",
       "      <td>44</td>\n",
       "      <td>556</td>\n",
       "      <td>76</td>\n",
       "      <td>19364</td>\n",
       "      <td>20040</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North-West</td>\n",
       "      <td>44</td>\n",
       "      <td>310</td>\n",
       "      <td>67</td>\n",
       "      <td>18480</td>\n",
       "      <td>18901</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>West</td>\n",
       "      <td>31</td>\n",
       "      <td>312</td>\n",
       "      <td>76</td>\n",
       "      <td>18360</td>\n",
       "      <td>18779</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>883</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-East</td>\n",
       "      <td>43</td>\n",
       "      <td>490</td>\n",
       "      <td>121</td>\n",
       "      <td>17144</td>\n",
       "      <td>17798</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>891</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Dwarka</td>\n",
       "      <td>30</td>\n",
       "      <td>460</td>\n",
       "      <td>145</td>\n",
       "      <td>16581</td>\n",
       "      <td>17216</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>882</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South</td>\n",
       "      <td>40</td>\n",
       "      <td>400</td>\n",
       "      <td>94</td>\n",
       "      <td>15243</td>\n",
       "      <td>15777</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>880</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer</td>\n",
       "      <td>33</td>\n",
       "      <td>483</td>\n",
       "      <td>65</td>\n",
       "      <td>15120</td>\n",
       "      <td>15701</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>East</td>\n",
       "      <td>36</td>\n",
       "      <td>292</td>\n",
       "      <td>82</td>\n",
       "      <td>14828</td>\n",
       "      <td>15238</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>877</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>North</td>\n",
       "      <td>37</td>\n",
       "      <td>326</td>\n",
       "      <td>49</td>\n",
       "      <td>14023</td>\n",
       "      <td>14435</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mumbai Railway</td>\n",
       "      <td>6</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>12589</td>\n",
       "      <td>12616</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Rohini</td>\n",
       "      <td>43</td>\n",
       "      <td>408</td>\n",
       "      <td>82</td>\n",
       "      <td>12058</td>\n",
       "      <td>12591</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Shahdara</td>\n",
       "      <td>16</td>\n",
       "      <td>270</td>\n",
       "      <td>67</td>\n",
       "      <td>11122</td>\n",
       "      <td>11475</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>892</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Outer North</td>\n",
       "      <td>57</td>\n",
       "      <td>730</td>\n",
       "      <td>76</td>\n",
       "      <td>9044</td>\n",
       "      <td>9907</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>870</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Central</td>\n",
       "      <td>22</td>\n",
       "      <td>219</td>\n",
       "      <td>111</td>\n",
       "      <td>9370</td>\n",
       "      <td>9722</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        State/UT        District  Murder  Kidnapping and Abduction  Rape  \\\n",
       "433  Maharashtra   Mumbai Commr.     135                      1754   370   \n",
       "878        Delhi      North-East      44                       556    76   \n",
       "879        Delhi      North-West      44                       310    67   \n",
       "888        Delhi            West      31                       312    76   \n",
       "883        Delhi      South-East      43                       490   121   \n",
       "891        Delhi          Dwarka      30                       460   145   \n",
       "882        Delhi           South      40                       400    94   \n",
       "880        Delhi           Outer      33                       483    65   \n",
       "872        Delhi            East      36                       292    82   \n",
       "877        Delhi           North      37                       326    49   \n",
       "434  Maharashtra  Mumbai Railway       6                        20     1   \n",
       "889        Delhi          Rohini      43                       408    82   \n",
       "890        Delhi        Shahdara      16                       270    67   \n",
       "892        Delhi     Outer North      57                       730    76   \n",
       "870        Delhi         Central      22                       219   111   \n",
       "\n",
       "     Theft  Total_crimes  Cluster  \n",
       "433  17876         20135        1  \n",
       "878  19364         20040        1  \n",
       "879  18480         18901        1  \n",
       "888  18360         18779        1  \n",
       "883  17144         17798        1  \n",
       "891  16581         17216        1  \n",
       "882  15243         15777        1  \n",
       "880  15120         15701        1  \n",
       "872  14828         15238        1  \n",
       "877  14023         14435        1  \n",
       "434  12589         12616        1  \n",
       "889  12058         12591        1  \n",
       "890  11122         11475        1  \n",
       "892   9044          9907        1  \n",
       "870   9370          9722        1  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Peaceful_Area.sort_values('Total_crimes', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "d5c4faba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Assam</td>\n",
       "      <td>Guwahati City</td>\n",
       "      <td>74</td>\n",
       "      <td>379</td>\n",
       "      <td>62</td>\n",
       "      <td>2832</td>\n",
       "      <td>3347</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Gaya</td>\n",
       "      <td>144</td>\n",
       "      <td>547</td>\n",
       "      <td>72</td>\n",
       "      <td>2148</td>\n",
       "      <td>2911</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Motihari</td>\n",
       "      <td>146</td>\n",
       "      <td>425</td>\n",
       "      <td>15</td>\n",
       "      <td>2099</td>\n",
       "      <td>2685</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Muzaffarpur</td>\n",
       "      <td>136</td>\n",
       "      <td>763</td>\n",
       "      <td>57</td>\n",
       "      <td>2387</td>\n",
       "      <td>3343</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Patna</td>\n",
       "      <td>307</td>\n",
       "      <td>1332</td>\n",
       "      <td>85</td>\n",
       "      <td>8341</td>\n",
       "      <td>10065</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Saran</td>\n",
       "      <td>108</td>\n",
       "      <td>568</td>\n",
       "      <td>15</td>\n",
       "      <td>1899</td>\n",
       "      <td>2590</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>Chattisgarh</td>\n",
       "      <td>Raipur</td>\n",
       "      <td>75</td>\n",
       "      <td>438</td>\n",
       "      <td>114</td>\n",
       "      <td>1966</td>\n",
       "      <td>2593</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>Ahmedabad City</td>\n",
       "      <td>100</td>\n",
       "      <td>263</td>\n",
       "      <td>104</td>\n",
       "      <td>3187</td>\n",
       "      <td>3654</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>Surat City</td>\n",
       "      <td>100</td>\n",
       "      <td>304</td>\n",
       "      <td>52</td>\n",
       "      <td>1764</td>\n",
       "      <td>2220</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Faridabad</td>\n",
       "      <td>76</td>\n",
       "      <td>471</td>\n",
       "      <td>159</td>\n",
       "      <td>2301</td>\n",
       "      <td>3007</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Gurugram</td>\n",
       "      <td>90</td>\n",
       "      <td>286</td>\n",
       "      <td>191</td>\n",
       "      <td>4969</td>\n",
       "      <td>5536</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Hissar</td>\n",
       "      <td>37</td>\n",
       "      <td>110</td>\n",
       "      <td>106</td>\n",
       "      <td>1629</td>\n",
       "      <td>1882</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Karnal</td>\n",
       "      <td>66</td>\n",
       "      <td>150</td>\n",
       "      <td>128</td>\n",
       "      <td>1906</td>\n",
       "      <td>2250</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Panipat</td>\n",
       "      <td>72</td>\n",
       "      <td>598</td>\n",
       "      <td>108</td>\n",
       "      <td>1851</td>\n",
       "      <td>2629</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Rohtak</td>\n",
       "      <td>62</td>\n",
       "      <td>163</td>\n",
       "      <td>78</td>\n",
       "      <td>1652</td>\n",
       "      <td>1955</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>293</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>Ranchi</td>\n",
       "      <td>154</td>\n",
       "      <td>216</td>\n",
       "      <td>190</td>\n",
       "      <td>2377</td>\n",
       "      <td>2937</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>Bengaluru City</td>\n",
       "      <td>173</td>\n",
       "      <td>946</td>\n",
       "      <td>151</td>\n",
       "      <td>7574</td>\n",
       "      <td>8844</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Bhopal Commissionarate</td>\n",
       "      <td>54</td>\n",
       "      <td>570</td>\n",
       "      <td>248</td>\n",
       "      <td>2213</td>\n",
       "      <td>3085</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Bhopal Railway</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3278</td>\n",
       "      <td>3289</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Gwalior</td>\n",
       "      <td>64</td>\n",
       "      <td>317</td>\n",
       "      <td>193</td>\n",
       "      <td>1844</td>\n",
       "      <td>2418</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Indore Commissionarate</td>\n",
       "      <td>72</td>\n",
       "      <td>674</td>\n",
       "      <td>174</td>\n",
       "      <td>3745</td>\n",
       "      <td>4665</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>382</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Jabalpur Railway</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>2358</td>\n",
       "      <td>2371</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Ahmednagar</td>\n",
       "      <td>94</td>\n",
       "      <td>580</td>\n",
       "      <td>112</td>\n",
       "      <td>4043</td>\n",
       "      <td>4829</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Jalgaon</td>\n",
       "      <td>73</td>\n",
       "      <td>239</td>\n",
       "      <td>41</td>\n",
       "      <td>2057</td>\n",
       "      <td>2410</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Kolhapur</td>\n",
       "      <td>51</td>\n",
       "      <td>265</td>\n",
       "      <td>50</td>\n",
       "      <td>1779</td>\n",
       "      <td>2145</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Nagpur Commr.</td>\n",
       "      <td>65</td>\n",
       "      <td>460</td>\n",
       "      <td>115</td>\n",
       "      <td>2503</td>\n",
       "      <td>3143</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Navi Mumbai</td>\n",
       "      <td>39</td>\n",
       "      <td>364</td>\n",
       "      <td>105</td>\n",
       "      <td>1783</td>\n",
       "      <td>2291</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pune Commr.</td>\n",
       "      <td>105</td>\n",
       "      <td>693</td>\n",
       "      <td>305</td>\n",
       "      <td>3257</td>\n",
       "      <td>4360</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>448</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pune Rural</td>\n",
       "      <td>108</td>\n",
       "      <td>468</td>\n",
       "      <td>110</td>\n",
       "      <td>2764</td>\n",
       "      <td>3450</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>451</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Sangli</td>\n",
       "      <td>56</td>\n",
       "      <td>290</td>\n",
       "      <td>67</td>\n",
       "      <td>1953</td>\n",
       "      <td>2366</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>455</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Solapur Rural</td>\n",
       "      <td>57</td>\n",
       "      <td>300</td>\n",
       "      <td>74</td>\n",
       "      <td>2173</td>\n",
       "      <td>2604</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>456</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Thane Commr.</td>\n",
       "      <td>93</td>\n",
       "      <td>1003</td>\n",
       "      <td>171</td>\n",
       "      <td>3033</td>\n",
       "      <td>4300</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>461</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pimpri Chinchwad City</td>\n",
       "      <td>80</td>\n",
       "      <td>532</td>\n",
       "      <td>120</td>\n",
       "      <td>2787</td>\n",
       "      <td>3519</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>462</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Aurangabad Railway</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3455</td>\n",
       "      <td>3463</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>463</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mira Bhayandar Vasai Virar Commr.</td>\n",
       "      <td>38</td>\n",
       "      <td>619</td>\n",
       "      <td>160</td>\n",
       "      <td>2057</td>\n",
       "      <td>2874</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>DCP BBSR</td>\n",
       "      <td>47</td>\n",
       "      <td>336</td>\n",
       "      <td>49</td>\n",
       "      <td>1754</td>\n",
       "      <td>2186</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Ajmer</td>\n",
       "      <td>60</td>\n",
       "      <td>416</td>\n",
       "      <td>206</td>\n",
       "      <td>1626</td>\n",
       "      <td>2308</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Alwar</td>\n",
       "      <td>73</td>\n",
       "      <td>359</td>\n",
       "      <td>253</td>\n",
       "      <td>2172</td>\n",
       "      <td>2857</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Bharatpur</td>\n",
       "      <td>88</td>\n",
       "      <td>377</td>\n",
       "      <td>288</td>\n",
       "      <td>1814</td>\n",
       "      <td>2567</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur East</td>\n",
       "      <td>46</td>\n",
       "      <td>220</td>\n",
       "      <td>134</td>\n",
       "      <td>3266</td>\n",
       "      <td>3666</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur South</td>\n",
       "      <td>23</td>\n",
       "      <td>172</td>\n",
       "      <td>118</td>\n",
       "      <td>3018</td>\n",
       "      <td>3331</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur West</td>\n",
       "      <td>51</td>\n",
       "      <td>250</td>\n",
       "      <td>152</td>\n",
       "      <td>2093</td>\n",
       "      <td>2546</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>636</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Bhiwadi</td>\n",
       "      <td>58</td>\n",
       "      <td>243</td>\n",
       "      <td>169</td>\n",
       "      <td>1764</td>\n",
       "      <td>2234</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>Chennai</td>\n",
       "      <td>101</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>3230</td>\n",
       "      <td>3398</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>Railway Chennai</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1628</td>\n",
       "      <td>1634</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>692</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Cyberabad Commissionerate</td>\n",
       "      <td>106</td>\n",
       "      <td>613</td>\n",
       "      <td>124</td>\n",
       "      <td>2902</td>\n",
       "      <td>3745</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>693</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Hyderabad Commissionerate</td>\n",
       "      <td>79</td>\n",
       "      <td>609</td>\n",
       "      <td>104</td>\n",
       "      <td>2995</td>\n",
       "      <td>3787</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Rachakonda Commissionerate</td>\n",
       "      <td>64</td>\n",
       "      <td>392</td>\n",
       "      <td>172</td>\n",
       "      <td>2246</td>\n",
       "      <td>2874</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>731</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Agra</td>\n",
       "      <td>80</td>\n",
       "      <td>224</td>\n",
       "      <td>98</td>\n",
       "      <td>1961</td>\n",
       "      <td>2363</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Prayagraj</td>\n",
       "      <td>100</td>\n",
       "      <td>404</td>\n",
       "      <td>106</td>\n",
       "      <td>1564</td>\n",
       "      <td>2174</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>758</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>GRP</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>4387</td>\n",
       "      <td>4424</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>759</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Gautambudh Nagar</td>\n",
       "      <td>53</td>\n",
       "      <td>449</td>\n",
       "      <td>29</td>\n",
       "      <td>2492</td>\n",
       "      <td>3023</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>760</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>107</td>\n",
       "      <td>124</td>\n",
       "      <td>103</td>\n",
       "      <td>4048</td>\n",
       "      <td>4382</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>779</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Lucknow Commissionarate</td>\n",
       "      <td>131</td>\n",
       "      <td>293</td>\n",
       "      <td>156</td>\n",
       "      <td>2626</td>\n",
       "      <td>3206</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>783</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Mathura</td>\n",
       "      <td>84</td>\n",
       "      <td>397</td>\n",
       "      <td>87</td>\n",
       "      <td>1822</td>\n",
       "      <td>2390</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>785</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Meerut</td>\n",
       "      <td>97</td>\n",
       "      <td>500</td>\n",
       "      <td>103</td>\n",
       "      <td>1889</td>\n",
       "      <td>2589</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>875</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Metro</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3729</td>\n",
       "      <td>3736</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>RAILWAY</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>3089</td>\n",
       "      <td>3111</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>884</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-West</td>\n",
       "      <td>18</td>\n",
       "      <td>332</td>\n",
       "      <td>84</td>\n",
       "      <td>7461</td>\n",
       "      <td>7895</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           State/UT                           District  Murder  \\\n",
       "69            Assam                      Guwahati City      74   \n",
       "109           Bihar                               Gaya     144   \n",
       "121           Bihar                           Motihari     146   \n",
       "123           Bihar                        Muzaffarpur     136   \n",
       "128           Bihar                              Patna     307   \n",
       "134           Bihar                              Saran     108   \n",
       "166     Chattisgarh                             Raipur      75   \n",
       "180         Gujarat                     Ahmedabad City     100   \n",
       "212         Gujarat                         Surat City     100   \n",
       "232         Haryana                          Faridabad      76   \n",
       "235         Haryana                           Gurugram      90   \n",
       "236         Haryana                             Hissar      37   \n",
       "240         Haryana                             Karnal      66   \n",
       "246         Haryana                            Panipat      72   \n",
       "248         Haryana                             Rohtak      62   \n",
       "293       Jharkhand                             Ranchi     154   \n",
       "298       Karnataka                     Bengaluru City     173   \n",
       "365  Madhya Pradesh             Bhopal Commissionarate      54   \n",
       "366  Madhya Pradesh                     Bhopal Railway       1   \n",
       "376  Madhya Pradesh                            Gwalior      64   \n",
       "379  Madhya Pradesh             Indore Commissionarate      72   \n",
       "382  Madhya Pradesh                   Jabalpur Railway       2   \n",
       "415     Maharashtra                         Ahmednagar      94   \n",
       "429     Maharashtra                            Jalgaon      73   \n",
       "431     Maharashtra                           Kolhapur      51   \n",
       "435     Maharashtra                      Nagpur Commr.      65   \n",
       "442     Maharashtra                        Navi Mumbai      39   \n",
       "446     Maharashtra                        Pune Commr.     105   \n",
       "448     Maharashtra                         Pune Rural     108   \n",
       "451     Maharashtra                             Sangli      56   \n",
       "455     Maharashtra                      Solapur Rural      57   \n",
       "456     Maharashtra                       Thane Commr.      93   \n",
       "461     Maharashtra              Pimpri Chinchwad City      80   \n",
       "462     Maharashtra                 Aurangabad Railway       4   \n",
       "463     Maharashtra  Mira Bhayandar Vasai Virar Commr.      38   \n",
       "527          Odisha                           DCP BBSR      47   \n",
       "589       Rajasthan                              Ajmer      60   \n",
       "590       Rajasthan                              Alwar      73   \n",
       "594       Rajasthan                          Bharatpur      88   \n",
       "607       Rajasthan                        Jaipur East      46   \n",
       "610       Rajasthan                       Jaipur South      23   \n",
       "611       Rajasthan                        Jaipur West      51   \n",
       "636       Rajasthan                            Bhiwadi      58   \n",
       "644      Tamil Nadu                            Chennai     101   \n",
       "663      Tamil Nadu                    Railway Chennai       6   \n",
       "692       Telangana          Cyberabad Commissionerate     106   \n",
       "693       Telangana          Hyderabad Commissionerate      79   \n",
       "697       Telangana         Rachakonda Commissionerate      64   \n",
       "731   Uttar Pradesh                               Agra      80   \n",
       "733   Uttar Pradesh                          Prayagraj     100   \n",
       "758   Uttar Pradesh                                GRP      16   \n",
       "759   Uttar Pradesh                   Gautambudh Nagar      53   \n",
       "760   Uttar Pradesh                          Ghaziabad     107   \n",
       "779   Uttar Pradesh            Lucknow Commissionarate     131   \n",
       "783   Uttar Pradesh                            Mathura      84   \n",
       "785   Uttar Pradesh                             Meerut      97   \n",
       "875           Delhi                              Metro       1   \n",
       "881           Delhi                            RAILWAY       7   \n",
       "884           Delhi                         South-West      18   \n",
       "\n",
       "     Kidnapping and Abduction  Rape  Theft  Total_crimes  Cluster  \n",
       "69                        379    62   2832          3347        2  \n",
       "109                       547    72   2148          2911        2  \n",
       "121                       425    15   2099          2685        2  \n",
       "123                       763    57   2387          3343        2  \n",
       "128                      1332    85   8341         10065        2  \n",
       "134                       568    15   1899          2590        2  \n",
       "166                       438   114   1966          2593        2  \n",
       "180                       263   104   3187          3654        2  \n",
       "212                       304    52   1764          2220        2  \n",
       "232                       471   159   2301          3007        2  \n",
       "235                       286   191   4969          5536        2  \n",
       "236                       110   106   1629          1882        2  \n",
       "240                       150   128   1906          2250        2  \n",
       "246                       598   108   1851          2629        2  \n",
       "248                       163    78   1652          1955        2  \n",
       "293                       216   190   2377          2937        2  \n",
       "298                       946   151   7574          8844        2  \n",
       "365                       570   248   2213          3085        2  \n",
       "366                         9     1   3278          3289        2  \n",
       "376                       317   193   1844          2418        2  \n",
       "379                       674   174   3745          4665        2  \n",
       "382                         8     3   2358          2371        2  \n",
       "415                       580   112   4043          4829        2  \n",
       "429                       239    41   2057          2410        2  \n",
       "431                       265    50   1779          2145        2  \n",
       "435                       460   115   2503          3143        2  \n",
       "442                       364   105   1783          2291        2  \n",
       "446                       693   305   3257          4360        2  \n",
       "448                       468   110   2764          3450        2  \n",
       "451                       290    67   1953          2366        2  \n",
       "455                       300    74   2173          2604        2  \n",
       "456                      1003   171   3033          4300        2  \n",
       "461                       532   120   2787          3519        2  \n",
       "462                         3     1   3455          3463        2  \n",
       "463                       619   160   2057          2874        2  \n",
       "527                       336    49   1754          2186        2  \n",
       "589                       416   206   1626          2308        2  \n",
       "590                       359   253   2172          2857        2  \n",
       "594                       377   288   1814          2567        2  \n",
       "607                       220   134   3266          3666        2  \n",
       "610                       172   118   3018          3331        2  \n",
       "611                       250   152   2093          2546        2  \n",
       "636                       243   169   1764          2234        2  \n",
       "644                        31    36   3230          3398        2  \n",
       "663                         0     0   1628          1634        2  \n",
       "692                       613   124   2902          3745        2  \n",
       "693                       609   104   2995          3787        2  \n",
       "697                       392   172   2246          2874        2  \n",
       "731                       224    98   1961          2363        2  \n",
       "733                       404   106   1564          2174        2  \n",
       "758                        16     5   4387          4424        2  \n",
       "759                       449    29   2492          3023        2  \n",
       "760                       124   103   4048          4382        2  \n",
       "779                       293   156   2626          3206        2  \n",
       "783                       397    87   1822          2390        2  \n",
       "785                       500   103   1889          2589        2  \n",
       "875                         5     1   3729          3736        2  \n",
       "881                        14     1   3089          3111        2  \n",
       "884                       332    84   7461          7895        2  "
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sensitive_area=data[data['Cluster']==2]\n",
    "sensitive_area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "196addc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>59.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>75.796610</td>\n",
       "      <td>375.067797</td>\n",
       "      <td>107.033898</td>\n",
       "      <td>2771.864407</td>\n",
       "      <td>3329.762712</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>50.066432</td>\n",
       "      <td>260.819456</td>\n",
       "      <td>72.542488</td>\n",
       "      <td>1404.807134</td>\n",
       "      <td>1543.748632</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1564.000000</td>\n",
       "      <td>1634.000000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>222.000000</td>\n",
       "      <td>54.500000</td>\n",
       "      <td>1894.000000</td>\n",
       "      <td>2400.000000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>73.000000</td>\n",
       "      <td>359.000000</td>\n",
       "      <td>105.000000</td>\n",
       "      <td>2301.000000</td>\n",
       "      <td>2937.000000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>100.000000</td>\n",
       "      <td>516.000000</td>\n",
       "      <td>154.000000</td>\n",
       "      <td>3138.000000</td>\n",
       "      <td>3586.500000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>307.000000</td>\n",
       "      <td>1332.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>8341.000000</td>\n",
       "      <td>10065.000000</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Murder  Kidnapping and Abduction        Rape        Theft  \\\n",
       "count   59.000000                 59.000000   59.000000    59.000000   \n",
       "mean    75.796610                375.067797  107.033898  2771.864407   \n",
       "std     50.066432                260.819456   72.542488  1404.807134   \n",
       "min      1.000000                  0.000000    0.000000  1564.000000   \n",
       "25%     51.000000                222.000000   54.500000  1894.000000   \n",
       "50%     73.000000                359.000000  105.000000  2301.000000   \n",
       "75%    100.000000                516.000000  154.000000  3138.000000   \n",
       "max    307.000000               1332.000000  305.000000  8341.000000   \n",
       "\n",
       "       Total_crimes  Cluster  \n",
       "count     59.000000     59.0  \n",
       "mean    3329.762712      2.0  \n",
       "std     1543.748632      0.0  \n",
       "min     1634.000000      2.0  \n",
       "25%     2400.000000      2.0  \n",
       "50%     2937.000000      2.0  \n",
       "75%     3586.500000      2.0  \n",
       "max    10065.000000      2.0  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sensitive_area.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "f92a4d0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>State/UT</th>\n",
       "      <th>District</th>\n",
       "      <th>Murder</th>\n",
       "      <th>Kidnapping and Abduction</th>\n",
       "      <th>Rape</th>\n",
       "      <th>Theft</th>\n",
       "      <th>Total_crimes</th>\n",
       "      <th>Cluster</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Patna</td>\n",
       "      <td>307</td>\n",
       "      <td>1332</td>\n",
       "      <td>85</td>\n",
       "      <td>8341</td>\n",
       "      <td>10065</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>Karnataka</td>\n",
       "      <td>Bengaluru City</td>\n",
       "      <td>173</td>\n",
       "      <td>946</td>\n",
       "      <td>151</td>\n",
       "      <td>7574</td>\n",
       "      <td>8844</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>884</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>South-West</td>\n",
       "      <td>18</td>\n",
       "      <td>332</td>\n",
       "      <td>84</td>\n",
       "      <td>7461</td>\n",
       "      <td>7895</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Gurugram</td>\n",
       "      <td>90</td>\n",
       "      <td>286</td>\n",
       "      <td>191</td>\n",
       "      <td>4969</td>\n",
       "      <td>5536</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>415</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Ahmednagar</td>\n",
       "      <td>94</td>\n",
       "      <td>580</td>\n",
       "      <td>112</td>\n",
       "      <td>4043</td>\n",
       "      <td>4829</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Indore Commissionarate</td>\n",
       "      <td>72</td>\n",
       "      <td>674</td>\n",
       "      <td>174</td>\n",
       "      <td>3745</td>\n",
       "      <td>4665</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>758</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>GRP</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>4387</td>\n",
       "      <td>4424</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>760</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Ghaziabad</td>\n",
       "      <td>107</td>\n",
       "      <td>124</td>\n",
       "      <td>103</td>\n",
       "      <td>4048</td>\n",
       "      <td>4382</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pune Commr.</td>\n",
       "      <td>105</td>\n",
       "      <td>693</td>\n",
       "      <td>305</td>\n",
       "      <td>3257</td>\n",
       "      <td>4360</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>456</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Thane Commr.</td>\n",
       "      <td>93</td>\n",
       "      <td>1003</td>\n",
       "      <td>171</td>\n",
       "      <td>3033</td>\n",
       "      <td>4300</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>693</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Hyderabad Commissionerate</td>\n",
       "      <td>79</td>\n",
       "      <td>609</td>\n",
       "      <td>104</td>\n",
       "      <td>2995</td>\n",
       "      <td>3787</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>692</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Cyberabad Commissionerate</td>\n",
       "      <td>106</td>\n",
       "      <td>613</td>\n",
       "      <td>124</td>\n",
       "      <td>2902</td>\n",
       "      <td>3745</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>875</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>Metro</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3729</td>\n",
       "      <td>3736</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur East</td>\n",
       "      <td>46</td>\n",
       "      <td>220</td>\n",
       "      <td>134</td>\n",
       "      <td>3266</td>\n",
       "      <td>3666</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>Ahmedabad City</td>\n",
       "      <td>100</td>\n",
       "      <td>263</td>\n",
       "      <td>104</td>\n",
       "      <td>3187</td>\n",
       "      <td>3654</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>461</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pimpri Chinchwad City</td>\n",
       "      <td>80</td>\n",
       "      <td>532</td>\n",
       "      <td>120</td>\n",
       "      <td>2787</td>\n",
       "      <td>3519</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>462</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Aurangabad Railway</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3455</td>\n",
       "      <td>3463</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>448</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Pune Rural</td>\n",
       "      <td>108</td>\n",
       "      <td>468</td>\n",
       "      <td>110</td>\n",
       "      <td>2764</td>\n",
       "      <td>3450</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>644</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>Chennai</td>\n",
       "      <td>101</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>3230</td>\n",
       "      <td>3398</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Assam</td>\n",
       "      <td>Guwahati City</td>\n",
       "      <td>74</td>\n",
       "      <td>379</td>\n",
       "      <td>62</td>\n",
       "      <td>2832</td>\n",
       "      <td>3347</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Muzaffarpur</td>\n",
       "      <td>136</td>\n",
       "      <td>763</td>\n",
       "      <td>57</td>\n",
       "      <td>2387</td>\n",
       "      <td>3343</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur South</td>\n",
       "      <td>23</td>\n",
       "      <td>172</td>\n",
       "      <td>118</td>\n",
       "      <td>3018</td>\n",
       "      <td>3331</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Bhopal Railway</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3278</td>\n",
       "      <td>3289</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>779</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Lucknow Commissionarate</td>\n",
       "      <td>131</td>\n",
       "      <td>293</td>\n",
       "      <td>156</td>\n",
       "      <td>2626</td>\n",
       "      <td>3206</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>435</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Nagpur Commr.</td>\n",
       "      <td>65</td>\n",
       "      <td>460</td>\n",
       "      <td>115</td>\n",
       "      <td>2503</td>\n",
       "      <td>3143</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>Delhi</td>\n",
       "      <td>RAILWAY</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>3089</td>\n",
       "      <td>3111</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Bhopal Commissionarate</td>\n",
       "      <td>54</td>\n",
       "      <td>570</td>\n",
       "      <td>248</td>\n",
       "      <td>2213</td>\n",
       "      <td>3085</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>759</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Gautambudh Nagar</td>\n",
       "      <td>53</td>\n",
       "      <td>449</td>\n",
       "      <td>29</td>\n",
       "      <td>2492</td>\n",
       "      <td>3023</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Faridabad</td>\n",
       "      <td>76</td>\n",
       "      <td>471</td>\n",
       "      <td>159</td>\n",
       "      <td>2301</td>\n",
       "      <td>3007</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>293</th>\n",
       "      <td>Jharkhand</td>\n",
       "      <td>Ranchi</td>\n",
       "      <td>154</td>\n",
       "      <td>216</td>\n",
       "      <td>190</td>\n",
       "      <td>2377</td>\n",
       "      <td>2937</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Gaya</td>\n",
       "      <td>144</td>\n",
       "      <td>547</td>\n",
       "      <td>72</td>\n",
       "      <td>2148</td>\n",
       "      <td>2911</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>463</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Mira Bhayandar Vasai Virar Commr.</td>\n",
       "      <td>38</td>\n",
       "      <td>619</td>\n",
       "      <td>160</td>\n",
       "      <td>2057</td>\n",
       "      <td>2874</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>697</th>\n",
       "      <td>Telangana</td>\n",
       "      <td>Rachakonda Commissionerate</td>\n",
       "      <td>64</td>\n",
       "      <td>392</td>\n",
       "      <td>172</td>\n",
       "      <td>2246</td>\n",
       "      <td>2874</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Alwar</td>\n",
       "      <td>73</td>\n",
       "      <td>359</td>\n",
       "      <td>253</td>\n",
       "      <td>2172</td>\n",
       "      <td>2857</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Motihari</td>\n",
       "      <td>146</td>\n",
       "      <td>425</td>\n",
       "      <td>15</td>\n",
       "      <td>2099</td>\n",
       "      <td>2685</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Panipat</td>\n",
       "      <td>72</td>\n",
       "      <td>598</td>\n",
       "      <td>108</td>\n",
       "      <td>1851</td>\n",
       "      <td>2629</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>455</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Solapur Rural</td>\n",
       "      <td>57</td>\n",
       "      <td>300</td>\n",
       "      <td>74</td>\n",
       "      <td>2173</td>\n",
       "      <td>2604</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>Chattisgarh</td>\n",
       "      <td>Raipur</td>\n",
       "      <td>75</td>\n",
       "      <td>438</td>\n",
       "      <td>114</td>\n",
       "      <td>1966</td>\n",
       "      <td>2593</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Bihar</td>\n",
       "      <td>Saran</td>\n",
       "      <td>108</td>\n",
       "      <td>568</td>\n",
       "      <td>15</td>\n",
       "      <td>1899</td>\n",
       "      <td>2590</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>785</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Meerut</td>\n",
       "      <td>97</td>\n",
       "      <td>500</td>\n",
       "      <td>103</td>\n",
       "      <td>1889</td>\n",
       "      <td>2589</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Bharatpur</td>\n",
       "      <td>88</td>\n",
       "      <td>377</td>\n",
       "      <td>288</td>\n",
       "      <td>1814</td>\n",
       "      <td>2567</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Jaipur West</td>\n",
       "      <td>51</td>\n",
       "      <td>250</td>\n",
       "      <td>152</td>\n",
       "      <td>2093</td>\n",
       "      <td>2546</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Gwalior</td>\n",
       "      <td>64</td>\n",
       "      <td>317</td>\n",
       "      <td>193</td>\n",
       "      <td>1844</td>\n",
       "      <td>2418</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Jalgaon</td>\n",
       "      <td>73</td>\n",
       "      <td>239</td>\n",
       "      <td>41</td>\n",
       "      <td>2057</td>\n",
       "      <td>2410</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>783</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Mathura</td>\n",
       "      <td>84</td>\n",
       "      <td>397</td>\n",
       "      <td>87</td>\n",
       "      <td>1822</td>\n",
       "      <td>2390</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>382</th>\n",
       "      <td>Madhya Pradesh</td>\n",
       "      <td>Jabalpur Railway</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>2358</td>\n",
       "      <td>2371</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>451</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Sangli</td>\n",
       "      <td>56</td>\n",
       "      <td>290</td>\n",
       "      <td>67</td>\n",
       "      <td>1953</td>\n",
       "      <td>2366</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>731</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Agra</td>\n",
       "      <td>80</td>\n",
       "      <td>224</td>\n",
       "      <td>98</td>\n",
       "      <td>1961</td>\n",
       "      <td>2363</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Ajmer</td>\n",
       "      <td>60</td>\n",
       "      <td>416</td>\n",
       "      <td>206</td>\n",
       "      <td>1626</td>\n",
       "      <td>2308</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Navi Mumbai</td>\n",
       "      <td>39</td>\n",
       "      <td>364</td>\n",
       "      <td>105</td>\n",
       "      <td>1783</td>\n",
       "      <td>2291</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>240</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Karnal</td>\n",
       "      <td>66</td>\n",
       "      <td>150</td>\n",
       "      <td>128</td>\n",
       "      <td>1906</td>\n",
       "      <td>2250</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>636</th>\n",
       "      <td>Rajasthan</td>\n",
       "      <td>Bhiwadi</td>\n",
       "      <td>58</td>\n",
       "      <td>243</td>\n",
       "      <td>169</td>\n",
       "      <td>1764</td>\n",
       "      <td>2234</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>212</th>\n",
       "      <td>Gujarat</td>\n",
       "      <td>Surat City</td>\n",
       "      <td>100</td>\n",
       "      <td>304</td>\n",
       "      <td>52</td>\n",
       "      <td>1764</td>\n",
       "      <td>2220</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Odisha</td>\n",
       "      <td>DCP BBSR</td>\n",
       "      <td>47</td>\n",
       "      <td>336</td>\n",
       "      <td>49</td>\n",
       "      <td>1754</td>\n",
       "      <td>2186</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>Uttar Pradesh</td>\n",
       "      <td>Prayagraj</td>\n",
       "      <td>100</td>\n",
       "      <td>404</td>\n",
       "      <td>106</td>\n",
       "      <td>1564</td>\n",
       "      <td>2174</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431</th>\n",
       "      <td>Maharashtra</td>\n",
       "      <td>Kolhapur</td>\n",
       "      <td>51</td>\n",
       "      <td>265</td>\n",
       "      <td>50</td>\n",
       "      <td>1779</td>\n",
       "      <td>2145</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Rohtak</td>\n",
       "      <td>62</td>\n",
       "      <td>163</td>\n",
       "      <td>78</td>\n",
       "      <td>1652</td>\n",
       "      <td>1955</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>Haryana</td>\n",
       "      <td>Hissar</td>\n",
       "      <td>37</td>\n",
       "      <td>110</td>\n",
       "      <td>106</td>\n",
       "      <td>1629</td>\n",
       "      <td>1882</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>663</th>\n",
       "      <td>Tamil Nadu</td>\n",
       "      <td>Railway Chennai</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1628</td>\n",
       "      <td>1634</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           State/UT                           District  Murder  \\\n",
       "128           Bihar                              Patna     307   \n",
       "298       Karnataka                     Bengaluru City     173   \n",
       "884           Delhi                         South-West      18   \n",
       "235         Haryana                           Gurugram      90   \n",
       "415     Maharashtra                         Ahmednagar      94   \n",
       "379  Madhya Pradesh             Indore Commissionarate      72   \n",
       "758   Uttar Pradesh                                GRP      16   \n",
       "760   Uttar Pradesh                          Ghaziabad     107   \n",
       "446     Maharashtra                        Pune Commr.     105   \n",
       "456     Maharashtra                       Thane Commr.      93   \n",
       "693       Telangana          Hyderabad Commissionerate      79   \n",
       "692       Telangana          Cyberabad Commissionerate     106   \n",
       "875           Delhi                              Metro       1   \n",
       "607       Rajasthan                        Jaipur East      46   \n",
       "180         Gujarat                     Ahmedabad City     100   \n",
       "461     Maharashtra              Pimpri Chinchwad City      80   \n",
       "462     Maharashtra                 Aurangabad Railway       4   \n",
       "448     Maharashtra                         Pune Rural     108   \n",
       "644      Tamil Nadu                            Chennai     101   \n",
       "69            Assam                      Guwahati City      74   \n",
       "123           Bihar                        Muzaffarpur     136   \n",
       "610       Rajasthan                       Jaipur South      23   \n",
       "366  Madhya Pradesh                     Bhopal Railway       1   \n",
       "779   Uttar Pradesh            Lucknow Commissionarate     131   \n",
       "435     Maharashtra                      Nagpur Commr.      65   \n",
       "881           Delhi                            RAILWAY       7   \n",
       "365  Madhya Pradesh             Bhopal Commissionarate      54   \n",
       "759   Uttar Pradesh                   Gautambudh Nagar      53   \n",
       "232         Haryana                          Faridabad      76   \n",
       "293       Jharkhand                             Ranchi     154   \n",
       "109           Bihar                               Gaya     144   \n",
       "463     Maharashtra  Mira Bhayandar Vasai Virar Commr.      38   \n",
       "697       Telangana         Rachakonda Commissionerate      64   \n",
       "590       Rajasthan                              Alwar      73   \n",
       "121           Bihar                           Motihari     146   \n",
       "246         Haryana                            Panipat      72   \n",
       "455     Maharashtra                      Solapur Rural      57   \n",
       "166     Chattisgarh                             Raipur      75   \n",
       "134           Bihar                              Saran     108   \n",
       "785   Uttar Pradesh                             Meerut      97   \n",
       "594       Rajasthan                          Bharatpur      88   \n",
       "611       Rajasthan                        Jaipur West      51   \n",
       "376  Madhya Pradesh                            Gwalior      64   \n",
       "429     Maharashtra                            Jalgaon      73   \n",
       "783   Uttar Pradesh                            Mathura      84   \n",
       "382  Madhya Pradesh                   Jabalpur Railway       2   \n",
       "451     Maharashtra                             Sangli      56   \n",
       "731   Uttar Pradesh                               Agra      80   \n",
       "589       Rajasthan                              Ajmer      60   \n",
       "442     Maharashtra                        Navi Mumbai      39   \n",
       "240         Haryana                             Karnal      66   \n",
       "636       Rajasthan                            Bhiwadi      58   \n",
       "212         Gujarat                         Surat City     100   \n",
       "527          Odisha                           DCP BBSR      47   \n",
       "733   Uttar Pradesh                          Prayagraj     100   \n",
       "431     Maharashtra                           Kolhapur      51   \n",
       "248         Haryana                             Rohtak      62   \n",
       "236         Haryana                             Hissar      37   \n",
       "663      Tamil Nadu                    Railway Chennai       6   \n",
       "\n",
       "     Kidnapping and Abduction  Rape  Theft  Total_crimes  Cluster  \n",
       "128                      1332    85   8341         10065        2  \n",
       "298                       946   151   7574          8844        2  \n",
       "884                       332    84   7461          7895        2  \n",
       "235                       286   191   4969          5536        2  \n",
       "415                       580   112   4043          4829        2  \n",
       "379                       674   174   3745          4665        2  \n",
       "758                        16     5   4387          4424        2  \n",
       "760                       124   103   4048          4382        2  \n",
       "446                       693   305   3257          4360        2  \n",
       "456                      1003   171   3033          4300        2  \n",
       "693                       609   104   2995          3787        2  \n",
       "692                       613   124   2902          3745        2  \n",
       "875                         5     1   3729          3736        2  \n",
       "607                       220   134   3266          3666        2  \n",
       "180                       263   104   3187          3654        2  \n",
       "461                       532   120   2787          3519        2  \n",
       "462                         3     1   3455          3463        2  \n",
       "448                       468   110   2764          3450        2  \n",
       "644                        31    36   3230          3398        2  \n",
       "69                        379    62   2832          3347        2  \n",
       "123                       763    57   2387          3343        2  \n",
       "610                       172   118   3018          3331        2  \n",
       "366                         9     1   3278          3289        2  \n",
       "779                       293   156   2626          3206        2  \n",
       "435                       460   115   2503          3143        2  \n",
       "881                        14     1   3089          3111        2  \n",
       "365                       570   248   2213          3085        2  \n",
       "759                       449    29   2492          3023        2  \n",
       "232                       471   159   2301          3007        2  \n",
       "293                       216   190   2377          2937        2  \n",
       "109                       547    72   2148          2911        2  \n",
       "463                       619   160   2057          2874        2  \n",
       "697                       392   172   2246          2874        2  \n",
       "590                       359   253   2172          2857        2  \n",
       "121                       425    15   2099          2685        2  \n",
       "246                       598   108   1851          2629        2  \n",
       "455                       300    74   2173          2604        2  \n",
       "166                       438   114   1966          2593        2  \n",
       "134                       568    15   1899          2590        2  \n",
       "785                       500   103   1889          2589        2  \n",
       "594                       377   288   1814          2567        2  \n",
       "611                       250   152   2093          2546        2  \n",
       "376                       317   193   1844          2418        2  \n",
       "429                       239    41   2057          2410        2  \n",
       "783                       397    87   1822          2390        2  \n",
       "382                         8     3   2358          2371        2  \n",
       "451                       290    67   1953          2366        2  \n",
       "731                       224    98   1961          2363        2  \n",
       "589                       416   206   1626          2308        2  \n",
       "442                       364   105   1783          2291        2  \n",
       "240                       150   128   1906          2250        2  \n",
       "636                       243   169   1764          2234        2  \n",
       "212                       304    52   1764          2220        2  \n",
       "527                       336    49   1754          2186        2  \n",
       "733                       404   106   1564          2174        2  \n",
       "431                       265    50   1779          2145        2  \n",
       "248                       163    78   1652          1955        2  \n",
       "236                       110   106   1629          1882        2  \n",
       "663                         0     0   1628          1634        2  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sensitive_area.sort_values('Total_crimes', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "947c2938",
   "metadata": {},
   "source": [
    "By observing the above data it was found that there were 730 districts which can be considered as moderate areas, 187 as peaceful and 17 as sensitive areas wrt to the four major crimes taken into consideration. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1aba9924",
   "metadata": {},
   "source": [
    "# Most safe and unsafe districts."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96fbd242",
   "metadata": {},
   "source": [
    "From the above data it was observed that the Chaibasa district in Jharkhand is the most safe district.\n",
    " From the above data it was observed that the Maharashtra Commr. district in Mumbai is the most unsafe district."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "989619e5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
